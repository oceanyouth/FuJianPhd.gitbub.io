<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大学之道，在明明德，在亲民，在止于至善。</title>
  
  <subtitle>游走在知识边缘的蓝狗</subtitle>
  <link href="https://oceanyouth.github.io/atom.xml" rel="self"/>
  
  <link href="https://oceanyouth.github.io/"/>
  <updated>2021-12-05T16:00:00.000Z</updated>
  <id>https://oceanyouth.github.io/</id>
  
  <author>
    <name>学习梦想家</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>理论力学（物理类）——任延宇</title>
    <link href="https://oceanyouth.github.io/2021/12/06/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA/03%20%E5%8A%9B%E5%AD%A6/20211125_%E7%90%86%E8%AE%BA%E5%8A%9B%E5%AD%A6-%E4%BB%BB%E5%BB%B6%E5%AE%87/"/>
    <id>https://oceanyouth.github.io/2021/12/06/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA/03%20%E5%8A%9B%E5%AD%A6/20211125_%E7%90%86%E8%AE%BA%E5%8A%9B%E5%AD%A6-%E4%BB%BB%E5%BB%B6%E5%AE%87/</id>
    <published>2021-12-05T16:00:00.000Z</published>
    <updated>2021-12-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="理论力学（物理类）——任延宇"><a href="#理论力学（物理类）——任延宇" class="headerlink" title="理论力学（物理类）——任延宇"></a>理论力学（物理类）——任延宇</h1><p><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202150355.png" alt="20211202150355"></p><h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><blockquote><ol><li>经典物理 &amp; 量子物理</li><li>普通物理：力学、电磁学、热学、原子物理学→四大力学：理论力学、电动力学、热力学与统计物理、量子力学</li><li>运动学：如何描述物体的运动；动力学（静力学）：物体的运动与物体间相互作用的内在联系。</li><li>牛顿力学和分析力学两种看待问题的角度。  </li></ol><ul><li>如圆的定义，牛顿力学→到定点距离相等的点形成的轨迹；分析力学→一段长度的绳子围成的任意形状中面积最大的一种形状。</li><li>牛顿力学：每个时刻物体的满足动量定理的描述；</li><li>分析力学：物体所有的运动都拿出来，大自然选择路径去行走。</li></ul></blockquote><blockquote><ol start="6"><li>平动参考系</li><li>相对性原理</li></ol><ul><li>研究物体的运动首先需要确定参考系。运动学的参考系可以任意选择；动力学的参考系需要选择惯性参考系。</li><li>力学相对性原理/伽利略相对性原理：静止和匀速直线运动的参考系具有等同的地位；都可以作为惯性参考系。</li><li>爱因斯坦相对性原理：一切惯性参考系对所有的物理过程都是等价的。</li></ul></blockquote><h2 id="第一章-质点力学"><a href="#第一章-质点力学" class="headerlink" title="第一章 质点力学"></a>第一章 质点力学</h2><blockquote><ol><li>基本概念</li></ol><ul><li>质点：无大小、形状，但具有质量的几何点。（理想化模型）</li><li>质量m：</li><li>位移<strong>r</strong>：物体（质点）的位置变化，由初位置到末位置的有向线段。在坐标系中为位置的变化量=末位置-初位置。</li><li>动量<strong>p</strong>：质点质量m与运动速度<strong>v</strong>的乘积。<br>冲量<strong>I</strong>：力<strong>F</strong>和力的作用时间t的乘积。<br>力矩<strong>M</strong>：<br>动量矩<strong>J</strong>:</li></ul><ol start="2"><li>参考系与坐标系<br>reference frame/inertial system/Galilean system参考系：被选作参考的物体或物体组，用于坐标原点的确定。<br>coordinate system坐标系：将矢量变成分量（数的形式，便于定量计算）；坐标系对基本矢量（基矢）的要求：完备、线性无关。<br>标准正交基：三个相互垂直的单位长度的矢量。<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202094205.png" alt="20211202094205"><br>笛卡尔坐标系<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202103749.png" alt="20211202103749"></li><li>平面极坐标<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202100704.png" alt="20211202100704"></li><li>自然坐标系<br>已知质点的运动轨迹。<br>单位切向量：指向质点前进方向；单位（主）法线向量（指向曲线的凹侧）<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202111315.png" alt="20211202111315"></li><li></li></ol></blockquote><h2 id="第二章-质点系力学"><a href="#第二章-质点系力学" class="headerlink" title="第二章 质点系力学"></a>第二章 质点系力学</h2><h2 id="第三章-刚体力学"><a href="#第三章-刚体力学" class="headerlink" title="第三章 刚体力学"></a>第三章 刚体力学</h2><blockquote><ol><li>刚体运动的分类</li></ol><ul><li>刚体：任意两点间的距离不因力的作用而发生变化的质点组。</li><li>自由度：确定一个系统运动状态所必须的，能够独立变化的物理量的个数。</li><li>平动、定轴转动、定点转动、平面平行运动</li></ul><ol start="2"><li>数学基础</li></ol><ul><li>同一矢量在不同坐标系下的表示<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202130023.png" alt="20211202130023"></li><li>定点转动的代数表示<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202134922.png" alt="20211202134922"></li><li>欧拉定理<br>刚体定点转动的前后位形可以通过一次定轴转动来实现。</li><li>无限小转动分析<ul><li>两次定点转动不能交换顺序→矩阵不满足乘法交换律</li><li>无限小转动的矩阵表示：满足交换律。<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202145245.png" alt="20211202145245"></li><li>转轴、转角、表示矩阵<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202154048.png" alt="20211202154048"><br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202154141.png" alt="20211202154141"><br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202154217.png" alt="20211202154217"></li></ul></li></ul><ol start="3"><li>欧拉角<br>通过三次定轴转动实现任意的定点转动。</li><li>定点转动前瞻</li><li>欧拉运动学方程<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211202235357.png" alt="20211202235357"></li><li>力系的简化</li></ol><ul><li>力偶：大小相等，方向相反，但不共线的一对平行力。</li><li>惯性运动：物体所受外力的合力为零时靠它的惯性所做的匀速直线运动。物体只受力偶作用的话，质心做惯性运动，力偶不会对刚体产生平动效果。</li><li><strong>合力</strong>和<strong>力的矢量和</strong>：力偶→力的矢量和等于0，但合力不等于0。合力：如果一个力能够代替另外几个力的效果，称这个力为另外几个力的合力。</li><li>力的可传性原理：无需任何附加效果</li><li>力的平移定理：需附加一个力偶，其力矩为待平移的力对O点的力偶矩。</li><li>共点力和平行力<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211203095729.png" alt="20211203095729"></li></ul><ol start="7"><li>刚体的平衡问题</li></ol><ul><li>刚体的平衡条件：1）维持平衡的条件→主矢=0；主矩=0；2）刚体之前处于平衡状态。</li><li>简化中心的选取问题<blockquote><p><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211203095802.png" alt="20211203095802"><br>平衡求解实例<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211203095909.png" alt="20211203095909"></p></blockquote></li></ul><ol start="8"><li></li></ol><ul><li>惯量[inertia][物]/惯性∶物质（物体）运动的惯性量值。</li><li>转动惯量(Rotational Inertia)，又称惯性矩(Momentum of Inertia)，是一个物体对于其旋转运动的惯性大小的量度。</li><li>面积惯性矩、极惯性矩</li><li>静矩</li><li>形心、质心、重心</li><li>二阶张量可以表示为矩阵的形式，即<strong>张量表示矩阵</strong>。</li><li></li></ul></blockquote><h2 id="第四章-转动坐标系"><a href="#第四章-转动坐标系" class="headerlink" title="第四章 转动坐标系"></a>第四章 转动坐标系</h2><h2 id="第五章-分析力学"><a href="#第五章-分析力学" class="headerlink" title="第五章 分析力学"></a>第五章 分析力学</h2>]]></content>
    
    
    <summary type="html">这是一篇个人学习记录。</summary>
    
    
    
    <category term="学习——力学" scheme="https://oceanyouth.github.io/categories/%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E5%8A%9B%E5%AD%A6/"/>
    
    
    <category term="力学 理论" scheme="https://oceanyouth.github.io/tags/%E5%8A%9B%E5%AD%A6-%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>基于Github Pages &amp; Hexo的个人博客搭建</title>
    <link href="https://oceanyouth.github.io/2021/12/06/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA/06%20%E7%BC%96%E7%A8%8B/Hexo%20&amp;%20Github%20Page%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://oceanyouth.github.io/2021/12/06/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA/06%20%E7%BC%96%E7%A8%8B/Hexo%20&amp;%20Github%20Page%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</id>
    <published>2021-12-05T16:00:00.000Z</published>
    <updated>2021-12-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1>]]></content>
    
    
    <summary type="html">这是网站的第一篇文章。</summary>
    
    
    
    <category term="学习——编程" scheme="https://oceanyouth.github.io/categories/%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="博客搭建" scheme="https://oceanyouth.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>计算机编程语言</title>
    <link href="https://oceanyouth.github.io/2021/12/04/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA/06%20%E7%BC%96%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    <id>https://oceanyouth.github.io/2021/12/04/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA/06%20%E7%BC%96%E7%A8%8B/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</id>
    <published>2021-12-04T07:31:06.000Z</published>
    <updated>2021-12-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="机器语言"><a href="#机器语言" class="headerlink" title="机器语言"></a>机器语言</h1><blockquote><p>直接用计算机能理解的二进制指令去编写程序，是直接在控制计算机硬件</p><ul><li>优点是最底层，执行速度最快</li><li>缺点是最复杂，开发效率最低</li></ul></blockquote><h1 id="汇编语言"><a href="#汇编语言" class="headerlink" title="汇编语言"></a>汇编语言</h1><blockquote><p>用英文标签取代二进制指令去编写程序，是直接在控制计算机硬件</p><ul><li><p>优点是比较底层，执行速度最快</p></li><li><p>缺点是复杂，开发效率最低</p></li></ul></blockquote><h1 id="高级语言"><a href="#高级语言" class="headerlink" title="高级语言"></a>高级语言</h1><blockquote><p>用人类能理解的表达方式去编写程序</p><p><strong>高级语言程序的两种执行方式</strong><br>编译型：c、go执行速度快，不依赖语言环境运行，跨平台差</p><ul><li>源代码（人话）——&gt;编译器——&gt;计算机能理解的机器指令</li></ul><p>解释型：python、shell 跨平台好，一份代码，到处使用，缺点是执行速度慢，依赖解释器运行</p><ul><li>源代码（人话）——&gt;解释器——&gt;计算机能理解的机器指令</li></ul><p>解释型语言编写程序每次运行都离不开解释器<br>编译型语言编写程序如果编译成功，在第二次运行的不需要编译器</p></blockquote><h1 id="Python程序运行原理"><a href="#Python程序运行原理" class="headerlink" title="Python程序运行原理"></a>Python程序运行原理</h1><blockquote><p>第一次运行python程序，python解释器会生成字节码文件</p><p>第二次运行python程序的时候，python解释器运行的是字节码文件</p><p>python语言的三大特性：</p><p>1、语法简单，上手容易</p><p>2、封装程度高</p><p>3、非常丰富的第三库</p></blockquote><h1 id="Github-Pages搭建个人博客"><a href="#Github-Pages搭建个人博客" class="headerlink" title="Github Pages搭建个人博客"></a>Github Pages搭建个人博客</h1><h2 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1. 安装Node.js"></a>1. 安装<a href="https://nodejs.org/en/">Node.js</a></h2><blockquote><p><a href="#6-nodejs%E6%98%AF%E7%94%A8%E6%9D%A5%E5%81%9A%E4%BB%80%E4%B9%88%E7%9A%84">Node.js</a>是一个基于Chrome V8引擎的JavaScript运行环境。</p><p><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211205173111.png" alt="20211205173111"></p><p>Tips：<a href="#12-npm-%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D">NPM</a>是随同Node.JS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题。</p><p><strong>检查是否安装成功</strong></p><ul><li>VScode → Ctrl+` → node -v → 输出版本号，如：v14.17.2<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211205174652.png" alt="20211205174652"></li><li>Windows界面 → Win+R → CMD → node -v → 输出版本号，如：v14.17.2<br><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211205174743.png" alt="20211205174743"></li></ul></blockquote><h2 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2. 安装Git"></a>2. 安装<a href="https://git-scm.com/">Git</a></h2><blockquote><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。</p><p><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211205175248.png" alt="20211205175248"></p><p><strong>检查是否安装成功</strong></p><ul><li><p>VScode → Ctrl+` → git → 输出git相关信息</p></li><li><p>Windows界面 → Win+R → CMD → git → 输出git相关信息</p></li></ul></blockquote><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3. 安装Hexo"></a>3. 安装<a href="https://hexo.io/zh-cn/">Hexo</a></h2><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><blockquote><p>npm install hexo-cli -g #安装hexo<br>hexo init GitHub_Blog #<br>cd GitHub_Blog<br>npm install<br>hexo server</p></blockquote><p><strong>常用命令</strong></p><blockquote><p>hexo new “postName” #新建文章<br>hexo new page”pageName” #新建页面<br>hexo generate #生成静态页面至public目录<br>hexo server #开启预览访问端口（默认端口4000，’ctrl +C关闭server）<br>hexo deploy #部署到GitHub<br>hexo help #查看帮助<br>hexo version #查看Hexo的版本</p></blockquote><p><strong>缩写命令</strong></p><blockquote><p>hexo c == hexo clean<br>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy  </p></blockquote><p><strong>组合命令</strong></p><blockquote><p>Hexo s -g #生成并本地预览<br>hexo d -g #生成并上传  </p></blockquote><h2 id="4-注册Github账号并建立Github-Pages"><a href="#4-注册Github账号并建立Github-Pages" class="headerlink" title="4. 注册Github账号并建立Github Pages"></a>4. 注册<a href="https://github.com/">Github</a>账号并建立Github Pages</h2><p>Github是一个基于git的代码托管平台。</p><p>（1）创建repository：：用户名+.github+.io</p><p>（2）<a href="https://hexo.io/zh-cn/docs/one-command-deployment">配置文件</a></p><pre><code>1）安装插件包：hexo-deployer-git，将hexo部署到git上。   </code></pre><blockquote><p>$ npm install hexo-deployer-git –save</p></blockquote><pre><code>2）_config.yml：全局配置文件  </code></pre><blockquote><p>deploy:<br>type: git<br>repo: <a href="https://github.com/oceanyouth/oceanyouth.github.io.git">https://github.com/oceanyouth/oceanyouth.github.io.git</a><br>branch: main</p></blockquote><pre><code>3）[SHH密钥配置](https://blog.csdn.net/qq_36667170/article/details/79094257)</code></pre><blockquote><ul><li>git bash.exe → ssh-keygen -t rsa -C”<a href="mailto:&#111;&#99;&#101;&#97;&#x6e;&#x79;&#111;&#117;&#x6e;&#103;&#x40;&#x73;&#x6a;&#116;&#117;&#x2e;&#101;&#x64;&#x75;&#46;&#99;&#x6e;">&#111;&#99;&#101;&#97;&#x6e;&#x79;&#111;&#117;&#x6e;&#103;&#x40;&#x73;&#x6a;&#116;&#117;&#x2e;&#101;&#x64;&#x75;&#46;&#99;&#x6e;</a>“  </li><li>一直回车至有提示为止，有（y/n）就输入y回车</li><li>进入GitHub添加SHH密钥 → id_rsa.pub</li></ul></blockquote><p>SSH 为 Secure Shell 的缩写，由 IETF 的网络小组（Network Working Group）所制定；SSH 为建立在应用层基础上的安全协议。<br>在管理Git项目上，有两种克隆到本地的方法。这里应该是构建GitHub与本地博客文档Git的联系。直接使用https url克隆到本地或使用SSH url克隆到本地。  </p><p><strong>这两种方式的主要区别在于：</strong></p><ul><li>使用https url对初学者来说会比较方便，复制https url然后到git Bash里面直接用clone命令克隆到本地就好了，但是每次fetch和push代码都需要输入账号和密码，这也是https方式的麻烦之处。</li><li>使用SSH url需要在只用之前先配置和添加好SSH key。每次fetch和push代码都不需要输入账号和密码，如果你想要每次都输入账号密码才能进行fetch和push也可以另外进行设置。</li></ul><h2 id="5-主题"><a href="#5-主题" class="headerlink" title="5. 主题"></a>5. 主题</h2><blockquote><p>（1）下载官方主题<br><a href="https://hexheo.io/themes/">https://hexheo.io/themes/</a></p></blockquote><blockquote><p>（2）_config.yml：全局配置文件<br>修改theme名称<br>Hexo clean：清除缓存<br>Hexo s -g：生成并本地预览<br>Tips：只要修改了配置文件就需要清除缓存。</p></blockquote><pre><code>修改参数  &gt; author：Fu Jian  &gt; ur1：https://oceanyouth.github.io  &gt; type：git  &gt; branch：main  &gt; repo：https://github.com/oceanyouth/oceanyouth.github.io.git</code></pre><blockquote><p>（3）_config.yml：主题配置文件<br>可以按照自己的喜好进行修改</p></blockquote><h2 id="6-美化url"><a href="#6-美化url" class="headerlink" title="6. 美化url"></a>6. 美化url</h2><h2 id="7-自定义域名与CDN加速"><a href="#7-自定义域名与CDN加速" class="headerlink" title="7. 自定义域名与CDN加速"></a>7. 自定义域名与CDN加速</h2><h2 id="8-网站管理小妙招（常用工具）"><a href="#8-网站管理小妙招（常用工具）" class="headerlink" title="8. 网站管理小妙招（常用工具）"></a>8. 网站管理小妙招（常用工具）</h2><h3 id="（1）写文章——Markdown编辑器"><a href="#（1）写文章——Markdown编辑器" class="headerlink" title="（1）写文章——Markdown编辑器"></a>（1）写文章——Markdown编辑器</h3><ul><li><p>Typora  </p><blockquote><p>Typora是一款轻便简洁的Markdown编辑器，支持即时渲染技术，这也是与其他Markdown编辑器最显著的区别。即时渲染使得你写Markdown就想是写Word文档一样流畅自如，不像其他编辑器的有编辑栏和显示栏。</p></blockquote></li><li><p>Sublime Text  </p><blockquote><p>Sublime Text是一款用于代码、标记和散文的精致文本编辑器。是一个代码编辑器（Sublime Text 2是收费软件，但可以无限期试用），也是HTML和散文先进的文本编辑器。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。<br>Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。</p></blockquote></li><li><p>其余代码编辑器</p><blockquote><p>Nopad++、VS Code、webstrom</p></blockquote></li></ul><h3 id="（2）PicGo图床"><a href="#（2）PicGo图床" class="headerlink" title="（2）PicGo图床"></a>（2）PicGo<a href="https://baike.baidu.com/item/%E5%9B%BE%E5%BA%8A/10721348?fr=aladdin">图床</a></h3><blockquote><p>图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。<br>VS Code编辑器可以使用PicGo图床插件实现图片上传到Github图床仓库。<br>图片快速上传方案：VS Code + Paste Image + PicGo。</p></blockquote><h2 id="9-技术参考"><a href="#9-技术参考" class="headerlink" title="9. 技术参考"></a>9. 技术参考</h2><blockquote><ul><li><a href="https://www.bilibili.com/video/BV1Eb4y1o7nL?p=1">Hexo从0到1搭建技术博客</a></li><li></li></ul></blockquote><h2 id="10-目录文件解释"><a href="#10-目录文件解释" class="headerlink" title="10. 目录文件解释"></a>10. 目录文件解释</h2><p><img src="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20211205183314.png" alt="20211205183314"></p><ul><li><p>.deploy_git</p><blockquote><p>这个应该是git部署用的文件。比如你写好的博客想部署到 GitHub Pages上去的话，可以用git部署插件，那个插件会创建这个目录</p></blockquote></li><li><p>.github</p><blockquote></blockquote></li><li><p><a href="https://www.cnblogs.com/xiaonian8/p/13714310.html">node_modules</a></p><blockquote><p>这个应该是node.js用到的安装到当前“项目／目录”的插件／模块目录吧。毕竟hexo是通过npm安装的吧？<br>node_modules是安装node后用来存放用包管理工具下载安装的包的文件夹。比如webpack、gulp、grunt这些工具。在node.js中模块与文件是一一对应的，也就是说一个node.js文件就是一个模块。</p></blockquote></li><li><p>public</p><blockquote><p>这应该是hexo编译之后的网站的目录</p></blockquote></li><li><p>scaffolds</p><blockquote><p>草稿箱</p></blockquote></li><li><p>source</p><blockquote><p>资源</p></blockquote></li><li><p>themes</p><blockquote><p>主题</p></blockquote></li><li><p>.gitignore</p><blockquote><p>这是一个git的配置文件，里面定义了不列入git管理的内容设置</p></blockquote></li><li><p>_config.yml</p><blockquote><p>配置文件</p></blockquote></li><li><p>db.json</p><blockquote><p>数据文件，<a href="https://cloud.tencent.com/developer/article/1685766?from=information.detail.db%E5%AD%98%E5%82%A8json">数据存储方式</a>——JSON、CSV、MongoDB、Redis、MySQL</p></blockquote></li><li><p>package.json</p><blockquote></blockquote></li><li><p>package-lock.json</p><blockquote></blockquote></li></ul><h1 id="计算机相关概念"><a href="#计算机相关概念" class="headerlink" title="计算机相关概念"></a>计算机相关概念</h1><h2 id="1-平台"><a href="#1-平台" class="headerlink" title="1. 平台"></a>1. 平台</h2><blockquote><p>PS（postscript，附言）：平台 = 计算机硬件+操作系统。<br>   跨平台性：开发出的软件可以在任意平台正常运行。</p></blockquote><h2 id="2-运行环境"><a href="#2-运行环境" class="headerlink" title="2. 运行环境"></a>2. <a href="https://baike.baidu.com/item/%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/6555199?fr=aladdin">运行环境</a></h2><blockquote><p>运行环境（英语：Runtime environment，又称“运行期系统”，run-time system），指一种把半编译的运行码在目标机器上运行的环境。<br>运行环境是一种介乎编译器及直译器的<strong>运行方式</strong>。Java运行环境，称之为“Java Runtime Environment”（JRE）。一个由C#，Visual Basic .NET，C++ .Net之类的语言写的程序运行于Microsoft Windows上的 .NET Common Language Runtime（CLR）或Linux上的Mono。<br>开发环境 → 编译<br>运行环境 → 执行</p></blockquote><h2 id="3-编译器"><a href="#3-编译器" class="headerlink" title="3. 编译器"></a>3. <a href="https://baike.baidu.com/item/%E7%BC%96%E8%AF%91%E5%99%A8/8853067">编译器</a></h2><blockquote><p>编译器就是将“一种语言（通常为高级语言）”翻译为“另一种语言（通常为低级语言）”的程序。<br>一个现代编译器的主要工作流程：源代码 (source code) → 预处理器 (preprocessor) → 编译器 (compiler) → 目标代码 (object code) → 链接器 (Linker) → 可执行程序 (executables)。</p></blockquote><h2 id="4-直译器"><a href="#4-直译器" class="headerlink" title="4. 直译器"></a>4. <a href="https://baike.baidu.com/item/%E7%9B%B4%E8%AF%91%E5%99%A8/8853014">直译器</a></h2><blockquote><p>直译器（英语：Interpreter），又译为<strong>解释器</strong>，是一种电脑程式，能够把高阶编程语言一行一行直接转译执行。直译器不会一次把整个程式转译出来，只像一位“中间人”，每次执行程式时都要先转成另一种语言再作执行，因此解释器的程式运行速度比较缓慢。它每转译一行程式叙述就立刻执行，然后再转译下一行，再执行，如此不停地进行下去。</p></blockquote><h2 id="5-引擎"><a href="#5-引擎" class="headerlink" title="5. 引擎"></a>5. 引擎</h2><blockquote><p>核心组件</p><ul><li>在现有的javascript引擎中，<a href="https://blog.csdn.net/wang516038746/article/details/105776802/">V8引擎</a>绝对是其中的佼佼者，chrome和node底层都使用了V8引擎，其中chrome的市场占有率已经达到70%，而node更是前端工程化以及扩展边界的核心支柱，V8引擎对于一个前端开发工程师来说重要程度可想而知。</li><li><a href="https://blog.csdn.net/weixin_44659458/article/details/109356598">引擎，编译器，作用域</a><br>引擎：   负责整个Javascript程序的编译及执行过程。<br>编译器：负责语法分析及代码生成。<br>作用域：负责收集并维护有所有声明的标识符组成的一系列查询。</li></ul></blockquote><h2 id="6-node-js是用来做什么的？"><a href="#6-node-js是用来做什么的？" class="headerlink" title="6. node.js是用来做什么的？"></a>6. <a href="https://www.html.cn/qa/node-js/12064.html">node.js是用来做什么的？</a></h2><blockquote><p><a href="https://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js</a>是一个基于Chrome V8引擎的JavaScript运行环境。Node对一些特殊用例进行优化，提供替代的API，使得V8在非浏览器环境下运行得更好。</p><p>简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p><p>我们都知道计算机处理器智能识别机器语言，而JavaScript是一门高级语言，计算机并不能直接读懂。所以我们需要所谓的引擎来将其转化成计算机所能理解的语言。</p><p>v8引擎是由Google推出的，为其浏览器Chrome所设计的开源JavaScript引擎。得益于JIT，编译模式的改变与编译阶段的优化,JavaScript的性能得到了一个飞跃。其源代码是用c++写的。</p><p>除了对JavaScript性能的大幅提升，v8引擎也提供了“嵌入”的功能，使得开发者也可以在自己的c++程序中使用“嵌入”的v8引擎，从而高效地编译JavaScript，并加入c++的feature。</p><p>要知道，作为一个底层得多的语言，c++可以实现的feature可要比JavaScript多得多。举例说明，JavaScript本身并没有read这么一个function。然而通过v8，我们可以将其绑定到一个用c++写的read callback上，从而通过JavaScript我们也可以直接加载文件了。</p><p>Node.js是一项服务器技术。我们都知道客户端提出服务请求，而服务器端负责处理请求并提供服务。而对于互联网来说，在Node.js之前JavaScript是一项完全的客户端技术，被用于浏览器中实现各种动画，对DOM的操作等等。而后端，即服务端则是由PHP、Python、Ruby、Java等等语言来实现。</p><p>于是，借助于v8种种便利的功能，Node.js诞生了。Node.js的出现，使得前后端使用同一种语言，统一模型的梦想得以实现。所以Node.js到底解决了JavaScript的什么痛点和问题？</p><ul><li>更好的组织代码，提升复用性。当然在ES6中这一点也得到了很大的提升。</li><li>处理文件与数据库。</li><li>与互联网进行沟通，以标准化的格式处理请求并发送回答。</li><li>快速地解决如上问题。</li></ul><p>同时，Node.js还带来了许多别的后端技术所不具备，或是不完善的优点，如其他人回答中的事件驱动，异步编程，非阻塞式io等等。JavaScript本身语言的特性，以及其的流行程度与社区活跃度给Node.js带来了各种意义上的优势。</p><p>在Node启动的很短时间内，社区就已经贡献了大量的扩展库（模块）。其中很多是连接数据库或是其他软件的驱动，但还有很多是凭他们的实力制作出来的非常有用的软件。</p><p>应用方向：</p><ul><li>在几年的时间里，Node.JS逐渐发展成一个成熟的开发平台，吸引了许多开发者。有许多大型高流量网站都采用Node.JS进行开发，此外，开发人员还可以使用它来开发一些快速移动Web框架。</li><li>除了Web应用外，NodeJS也被应用在许多方面，涉及到应用程序监控、媒体流、远程控制、桌面和移动应用等等。</li><li>Node对一些特殊用例进行优化，提供替代的API，使得V8在非浏览器环境下运行得更好。V8引擎执行Javascript的速度非常快，性能非常好。</li></ul><p>Node是一个基于Chrome JavaScript运行时建立的平台，用于方便地搭建响应速度快、易于扩展的网络应用。Node使用事件驱动， 非阻塞I/O 模型而得以轻量和高效，非常适合在分布式设备上运行数据密集型的实时应用。</p></blockquote><p>Node.js：编译器<br>Node.js 是一个开源与跨平台的 JavaScript 运行时环境。它是一个可用于几乎任何项目的流行工具！<br>Node.js 在浏览器外运行 V8 JavaScript 引擎（Google Chrome 的内核）。这使 Node.js 表现得非常出色。<br>简单的说 Node.js 就是运行在服务端的 JavaScript。<br>Node.js 是一个基于Chrome JavaScript 运行时建立的一个平台。<br>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p><h2 id="7-JavaScript-简介"><a href="#7-JavaScript-简介" class="headerlink" title="7. JavaScript 简介"></a>7. <a href="https://www.runoob.com/js/js-tutorial.html">JavaScript 简介</a></h2><blockquote><p>JavaScript 是互联网上最流行的脚本语言，这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。<br>JavaScript 是 Web 的编程语言。<br>所有现代的 HTML 页面都使用 JavaScript。<br>JavaScript 是脚本语言。<br>JavaScript 是一种轻量级的编程语言。<br>JavaScript 是可插入 HTML 页面的编程代码。<br>JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行。</p><p>JavaScript（简称“JS”） 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语言而出名，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。</p><p>JavaScript 是 web 开发人员必须学习的 3 门语言中的一门：</p><ul><li>HTML 定义了网页的内容</li><li>CSS 描述了网页的布局</li><li>JavaScript 控制了网页的行为</li></ul></blockquote><h2 id="8-web"><a href="#8-web" class="headerlink" title="8. web"></a>8. <a href="https://baike.baidu.com/item/web/150564?fr=aladdin">web</a></h2><blockquote><p>（World Wide Web）即全球广域网，也称为万维网，它是一种基于超文本和HTTP的、全球性的、动态交互的、跨平台的分布式图形信息系统。是建立在Internet上的一种网络服务，为浏览者在Internet上查找和浏览信息提供了图形化的、易于访问的直观界面，其中的文档及超级链接将Internet上的信息节点组织成一个互为关联的网状结构。  </p><ul><li>Web 网，系统 </li><li>Web page 网页</li><li>Website 网站</li></ul></blockquote><h2 id="9-HTML"><a href="#9-HTML" class="headerlink" title="9. HTML"></a>9. <a href="https://www.runoob.com/html/html-tutorial.html">HTML</a></h2><blockquote><p>超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。<br>您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</p></blockquote><h2 id="10-CSS简介"><a href="#10-CSS简介" class="headerlink" title="10. CSS简介"></a>10. <a href="https://www.runoob.com/css/css-intro.html">CSS简介</a></h2><blockquote><p>CSS 指层叠样式表 (Cascading Style Sheets)<br>样式定义如何显示 HTML 元素<br>样式通常存储在样式表中<br>把样式添加到 HTML 4.0 中，是为了解决内容与表现分离的问题<br>外部样式表可以极大提高工作效率<br>外部样式表通常存储在 CSS 文件中<br>多个样式定义可层叠为一个<br>使用 CSS 同时控制多重网页的样式和布局。</p></blockquote><h2 id="11-NPM-使用介绍"><a href="#11-NPM-使用介绍" class="headerlink" title="11. NPM 使用介绍"></a>11. <a href="https://www.runoob.com/nodejs/nodejs-npm.html">NPM 使用介绍</a></h2><blockquote><p>NPM是随同NodeJS一起安装的<strong>包管理工具</strong>，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：</p><ul><li>允许用户从NPM服务器下载别人编写的第三方包到本地使用。<br>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</li><li>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</li></ul><p>由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入 “npm -v” 来测试是否成功安装。命令如下，出现版本提示表示安装成功:</p></blockquote><h2 id="12-EditPlus"><a href="#12-EditPlus" class="headerlink" title="12. EditPlus"></a>12. EditPlus</h2><p>EditPlus<br>是一款由韩国 Sangil Kim （ES-Computing）出品的小巧但是功能强大的可处理文本、HTML和程序语言的Windows编辑器，你甚至可以通过设置用户工具将其作为C,Java,Php等等语言的一个简单的IDE。<br>EditPlus（文字编辑器）汉化版是一套功能强大，可取代记事本的文字编辑器，拥有无限制的撤消与重做、英文拼字检查、自动换行、列数标记、搜寻取代、同时编辑多文件、全屏幕浏览功能。而它还有一个好用的功能，就是它有监视剪贴板的功能，同步于剪贴板可自动粘贴进 EditPlus 的窗口中省去粘贴的步骤。另外它也是一个非常好用的HTML编辑器，它除了支持颜色标记、HTML 标记，同时支持C、C++、Perl、Java，另外，它还内建完整的HTML &amp; CSS1 指令功能，对于习惯用记事本编辑网页的朋友，它可帮你节省一半以上的网页制作时间，若你有安装IE3.0 以上版本，它还会结合IE浏览器于 EditPlus 窗口中，让你可以直接预览编辑好的网页（若没安装IE，也可指定浏览器路径）。因此，它是一个相当棒又多用途多状态的编辑软件。</p><h2 id="13-Markdown"><a href="#13-Markdown" class="headerlink" title="13. Markdown"></a>13. Markdown</h2><p>是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。<br>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。<br>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。<br>Markdown 编写的文档后缀为 .md, .markdown。</p><h2 id="14-网站框架搭建基础知识"><a href="#14-网站框架搭建基础知识" class="headerlink" title="14. 网站框架搭建基础知识"></a>14. 网站框架搭建基础知识</h2><p>1、Hexo 静态网站</p><p>2、wordpress 动态网站</p><p><a href="https://www.cnblogs.com/buyz/p/10935831.html">11个最流行的静态(博客)网站生成工具</a></p><p><strong>Hexo：静态网站生成工具</strong><br>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p><strong>Git：发布工具</strong><br>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。Git 与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。<br>Git 是一个分布式版本控制系统 → 软件<br>GitHub 是基于这种分布式控制思想而建立的一个代码托管平台服务 → 网站</p>]]></content>
    
    
    <summary type="html">计算机编程的基本常识</summary>
    
    
    
    <category term="学习——编程" scheme="https://oceanyouth.github.io/categories/%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="计算机 通识" scheme="https://oceanyouth.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA-%E9%80%9A%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>My First Blog</title>
    <link href="https://oceanyouth.github.io/2021/11/03/%E7%94%9F%E6%B4%BB%E5%88%86%E5%8C%BA/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://oceanyouth.github.io/2021/11/03/%E7%94%9F%E6%B4%BB%E5%88%86%E5%8C%BA/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-11-02T16:00:00.000Z</published>
    <updated>2021-12-05T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、建立网站的初衷"><a href="#一、建立网站的初衷" class="headerlink" title="一、建立网站的初衷"></a>一、建立网站的初衷</h1><h2 id="1-1-兴趣"><a href="#1-1-兴趣" class="headerlink" title="1.1 兴趣"></a>1.1 兴趣</h2><h2 id="1-2-实用"><a href="#1-2-实用" class="headerlink" title="1.2 实用"></a>1.2 实用</h2><h1 id="二、网站之后的发展方向"><a href="#二、网站之后的发展方向" class="headerlink" title="二、网站之后的发展方向"></a>二、网站之后的发展方向</h1><h2 id="2-1-生活方面"><a href="#2-1-生活方面" class="headerlink" title="2.1 生活方面"></a>2.1 生活方面</h2><h3 id="2-1-1-生活中的一些随想"><a href="#2-1-1-生活中的一些随想" class="headerlink" title="2.1.1 生活中的一些随想"></a>2.1.1 生活中的一些随想</h3><h3 id="2-1-2-生活中一些好玩事情的记录"><a href="#2-1-2-生活中一些好玩事情的记录" class="headerlink" title="2.1.2 生活中一些好玩事情的记录"></a>2.1.2 生活中一些好玩事情的记录</h3><h3 id="2-1-3-人生中一些重要的时刻"><a href="#2-1-3-人生中一些重要的时刻" class="headerlink" title="2.1.3 人生中一些重要的时刻"></a>2.1.3 人生中一些重要的时刻</h3><h2 id="2-2-娱乐方面"><a href="#2-2-娱乐方面" class="headerlink" title="2.2 娱乐方面"></a>2.2 娱乐方面</h2><h3 id="2-2-1-羽毛球"><a href="#2-2-1-羽毛球" class="headerlink" title="2.2.1 羽毛球"></a>2.2.1 羽毛球</h3><h3 id="2-2-2-动漫"><a href="#2-2-2-动漫" class="headerlink" title="2.2.2 动漫"></a>2.2.2 动漫</h3><h3 id="2-2-3-健身"><a href="#2-2-3-健身" class="headerlink" title="2.2.3 健身"></a>2.2.3 健身</h3><h2 id="2-3-学习方面"><a href="#2-3-学习方面" class="headerlink" title="2.3 学习方面"></a>2.3 学习方面</h2><p>学科门类（Fields of Disciplines of Conferring Academic degrees）：<br>是对具有一定关联学科的归类，是授予学位的学科类别。<br>根据国务院学位委员会、教育部印发的《学位授予和人才培养学科目录设置与管理办法》（学位〔2009〕10号）的规定，学科门类由国务院学位委员会和教育部共同制定，是国家进行学位授权审核与学科管理、学位授予单位开展学位授予与人才培养工作的基本依据。2011年3月，国务院学位委员会和教育部颁布修订的《学位授予和人才培养学科目录（2011年）》，规定我国分为<strong>哲学</strong>、<strong>经济学</strong>、<strong>法学</strong>、<strong>教育学</strong>、<strong>文学</strong>、<strong>历史学</strong>、<strong>理学</strong>、<strong>工学</strong>、<strong>农学</strong>、<strong>医学</strong>、<strong>军事学</strong>、<strong>管理学</strong>、<strong>艺术学</strong>、<strong>交叉学科</strong>14个学科门类  。</p><h3 id="2-3-1-人文社科类"><a href="#2-3-1-人文社科类" class="headerlink" title="2.3.1 人文社科类"></a>2.3.1 人文社科类</h3><h4 id="2-3-1-1-01-哲学"><a href="#2-3-1-1-01-哲学" class="headerlink" title="2.3.1.1 01 哲学"></a>2.3.1.1 01 哲学</h4><p>分享马克思主义哲学、逻辑学、科学技术哲学等方面的内容。</p><h4 id="2-3-1-2-02-经济学"><a href="#2-3-1-2-02-经济学" class="headerlink" title="2.3.1.2 02 经济学"></a>2.3.1.2 02 经济学</h4><p>分享世界经济、金融学等方面的内容。</p><h4 id="2-3-1-3-01-法学"><a href="#2-3-1-3-01-法学" class="headerlink" title="2.3.1.3 01 法学"></a>2.3.1.3 01 法学</h4><p>分享法学、政治学、马克思主义理论等方面的内容。</p><h4 id="2-3-1-4-01-教育学"><a href="#2-3-1-4-01-教育学" class="headerlink" title="2.3.1.4 01 教育学"></a>2.3.1.4 01 教育学</h4><p>分享心理学、体育学等方面的内容。</p><h4 id="2-3-1-5-01-文学"><a href="#2-3-1-5-01-文学" class="headerlink" title="2.3.1.5 01 文学"></a>2.3.1.5 01 文学</h4><p>分享中国古代文学等方面的内容。</p><h4 id="2-3-1-6-01-历史学"><a href="#2-3-1-6-01-历史学" class="headerlink" title="2.3.1.6 01 历史学"></a>2.3.1.6 01 历史学</h4><p>分享中国古代史、中国近现代史、世界史等方面的内容。</p><h3 id="2-3-2-理工科通识知识"><a href="#2-3-2-理工科通识知识" class="headerlink" title="2.3.2 理工科通识知识"></a>2.3.2 理工科通识知识</h3><h4 id="2-3-2-1-0703-化学"><a href="#2-3-2-1-0703-化学" class="headerlink" title="2.3.2.1 0703 化学"></a>2.3.2.1 0703 化学</h4><p>暂无。</p><h4 id="2-3-2-2-0705-地理学"><a href="#2-3-2-2-0705-地理学" class="headerlink" title="2.3.2.2 0705 地理学"></a>2.3.2.2 0705 地理学</h4><p>分享自然地理、人文地理等方面的内容。</p><h4 id="2-3-2-3-0707-海洋科学"><a href="#2-3-2-3-0707-海洋科学" class="headerlink" title="2.3.2.3 0707 海洋科学"></a>2.3.2.3 0707 海洋科学</h4><p>分享物理海洋学、海洋化学、海洋生物、海洋地质等方面的知识。</p><h4 id="2-3-2-4-0709-地质学"><a href="#2-3-2-4-0709-地质学" class="headerlink" title="2.3.2.4 0709 地质学"></a>2.3.2.4 0709 地质学</h4><p>暂无。</p><h4 id="2-3-2-5-0710-生物学"><a href="#2-3-2-5-0710-生物学" class="headerlink" title="2.3.2.5 0710 生物学"></a>2.3.2.5 0710 生物学</h4><p>暂无。</p><h4 id="2-3-2-6-0712-科学技术史"><a href="#2-3-2-6-0712-科学技术史" class="headerlink" title="2.3.2.6 0712 科学技术史"></a>2.3.2.6 0712 科学技术史</h4><p>暂无。</p><h3 id="2-3-3-理工科基础知识"><a href="#2-3-3-理工科基础知识" class="headerlink" title="2.3.3 理工科基础知识"></a>2.3.3 理工科基础知识</h3><h4 id="2-3-3-1-0701-数学"><a href="#2-3-3-1-0701-数学" class="headerlink" title="2.3.3.1 0701 数学"></a>2.3.3.1 0701 数学</h4><p>分享高等数学、线性代数、概率论与数理统计、复变函数、数学分析等方面的内容。</p><h4 id="2-3-3-2-0702-物理"><a href="#2-3-3-2-0702-物理" class="headerlink" title="2.3.3.2 0702 物理"></a>2.3.3.2 0702 物理</h4><p>暂无。</p><h4 id="2-3-3-3-0801-力学"><a href="#2-3-3-3-0801-力学" class="headerlink" title="2.3.3.3 0801 力学"></a>2.3.3.3 0801 力学</h4><p>分享理论力学、材料力学、流体力学等方面的内容。</p><h3 id="2-3-4-理工科专业知识"><a href="#2-3-4-理工科专业知识" class="headerlink" title="2.3.4 理工科专业知识"></a>2.3.4 理工科专业知识</h3><h4 id="2-3-4-1-0802-机械工程"><a href="#2-3-4-1-0802-机械工程" class="headerlink" title="2.3.4.1 0802 机械工程"></a>2.3.4.1 0802 机械工程</h4><p>分享机械电子工程、机械设计及理论方面的内容，主要涉及工业应用中的非标自动化装备，水下机器人等。</p><h4 id="2-3-4-2-0807-动力工程及工程热物理"><a href="#2-3-4-2-0807-动力工程及工程热物理" class="headerlink" title="2.3.4.2 0807 动力工程及工程热物理"></a>2.3.4.2 0807 动力工程及工程热物理</h4><p>分享传热学、工程热力学、制冷与低温工程、流体机械、化工过程机械等方面的内容。</p><h4 id="2-3-4-3-0811-控制科学与工程"><a href="#2-3-4-3-0811-控制科学与工程" class="headerlink" title="2.3.4.3 0811 控制科学与工程"></a>2.3.4.3 0811 控制科学与工程</h4><p>分享控制理论与控制工程等方面的内容。</p><h4 id="2-3-4-4-0824-船舶与海洋工程"><a href="#2-3-4-4-0824-船舶与海洋工程" class="headerlink" title="2.3.4.4 0824 船舶与海洋工程"></a>2.3.4.4 0824 船舶与海洋工程</h4><p>分享船舶与海洋结构物设计制造等方面的内容。</p><p>ceshi<br>nishi<br>nishi</p>]]></content>
    
    
    <summary type="html">这是网站的第一篇文章。</summary>
    
    
    
    <category term="生活——博客介绍" scheme="https://oceanyouth.github.io/categories/%E7%94%9F%E6%B4%BB%E2%80%94%E2%80%94%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8D/"/>
    
    
    <category term="第一篇" scheme="https://oceanyouth.github.io/tags/%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    
  </entry>
  
</feed>
