<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>漫画世界的漫画家</title>
  
  <subtitle>游走在知识边缘的蓝狗</subtitle>
  <link href="https://oceanyouth.github.io/atom.xml" rel="self"/>
  
  <link href="https://oceanyouth.github.io/"/>
  <updated>2023-11-28T09:14:39.000Z</updated>
  <id>https://oceanyouth.github.io/</id>
  
  <author>
    <name>学习梦想家</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VSCode使用技巧</title>
    <link href="https://oceanyouth.github.io/2023/11/28/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-08-%E7%BC%96%E7%A8%8B-2023-11-28-VSCode%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://oceanyouth.github.io/2023/11/28/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-08-%E7%BC%96%E7%A8%8B-2023-11-28-VSCode%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</id>
    <published>2023-11-28T09:14:39.000Z</published>
    <updated>2023-11-28T09:14:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vscode高效使用技巧">VSCode高效使用技巧</h1><p><ahref="https://blog.csdn.net/VhWfR2u02Q/article/details/97708248?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-97708248-blog-129173366.235%5Ev38%5Epc_relevant_anti_t3&amp;spm=1001.2101.3001.4242.1&amp;utm_relevant_index=1">21个VSCode 快捷键，让代码更快，更有趣-CSDN博客</a></p><p><ahref="https://blog.csdn.net/ThisEqualThis/article/details/110235558">vscode常用快捷键_vscode中ctrl+t-CSDN博客</a></p><p><ahref="https://www.bilibili.com/video/BV1fy4y1b7TC/?p=14&amp;vd_source=ed137998fd1ae1b4a12558edaa6b34ab">5.3快捷键_哔哩哔哩_bilibili</a></p><p><ahref="https://www.ycpai.cn/python/9nX8T3Vj.html">Vscode怎么实现终端的清屏？vscode清除终端内容的方法- 优草派 (ycpai.cn)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vscode高效使用技巧&quot;&gt;VSCode高效使用技巧&lt;/h1&gt;
&lt;p&gt;&lt;a
href=&quot;https://blog.csdn.net/VhWfR2u02Q/article/details/97708248?utm_medium=distribute.pc_rel</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>多媒体技巧</title>
    <link href="https://oceanyouth.github.io/2023/10/30/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-10-30-%E5%A4%9A%E5%AA%92%E4%BD%93%E6%8A%80%E5%B7%A7/"/>
    <id>https://oceanyouth.github.io/2023/10/30/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-10-30-%E5%A4%9A%E5%AA%92%E4%BD%93%E6%8A%80%E5%B7%A7/</id>
    <published>2023-10-30T11:14:47.000Z</published>
    <updated>2023-10-30T11:14:47.000Z</updated>
    
    <content type="html"><![CDATA[<p><ahref="https://www.bilibili.com/video/BV1qL411o7TD/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ed137998fd1ae1b4a12558edaa6b34ab">文字转语音、音频转文字软件！双向转换，完全免费开源！支持Windows、macOS、Linux | 零度解说_哔哩哔哩_bilibili</a></p><p><ahref="https://www.bilibili.com/read/cv21023516/">几款免费的语音转文字工具推荐（附识别准确度排行榜）- 哔哩哔哩 (bilibili.com)</a></p><p><ahref="https://blog.csdn.net/engchina/article/details/130556631">本地部署Whisper 及 WhisperDesktop_engchina的博客-CSDN博客</a></p><p><ahref="https://huggingface.co/ggerganov/whisper.cpp/tree/main">ggerganov/whisper.cppat main (huggingface.co)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a
href=&quot;https://www.bilibili.com/video/BV1qL411o7TD/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=ed137998fd1ae1b4a12558edaa</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>博文知识</title>
    <link href="https://oceanyouth.github.io/2023/06/16/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-00-%E7%A7%91%E7%A0%94-2023-06-16-%E5%8D%9A%E6%96%87%E7%9F%A5%E8%AF%86/"/>
    <id>https://oceanyouth.github.io/2023/06/16/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-00-%E7%A7%91%E7%A0%94-2023-06-16-%E5%8D%9A%E6%96%87%E7%9F%A5%E8%AF%86/</id>
    <published>2023-06-16T03:45:24.000Z</published>
    <updated>2023-06-16T04:04:44.752Z</updated>
    
    <content type="html"><![CDATA[<p><ahref="https://mp.weixin.qq.com/s?__biz=MzU3NjE4NjQ4MA==&amp;mid=2247491282&amp;idx=3&amp;sn=2fb6d69507fb2a171ebef1ddfcbea7b0&amp;chksm=fd16efcdca6166db7d54160bf2c26252edb4dd84bf2e4c83d4330074bfb61865dc34d24d2a75&amp;mpshare=1&amp;scene=1&amp;srcid=0721F9Cgnd8fVeCuFBlXBBqP&amp;sharer_sharetime=1595315966154&amp;sharer_shareid=0f58d2651811c845be4164b159d219a9#rd">一文读懂卡尔曼滤波(Kalmanfilter) ，含详细数学推导</a></p><p><ahref="https://mp.weixin.qq.com/s?__biz=MjM5NzA1OTc2MA==&amp;mid=2651289198&amp;idx=3&amp;sn=b36a6e9737fa1f95e27e6dadd2b3d4f4&amp;chksm=bd2c1bb18a5b92a79d57af637c1026f3bdabd505f3f39586fa79fc4f7927ea3fbf2cede667b7&amp;mpshare=1&amp;scene=1&amp;srcid=0722ukoEgrru7Yp8hc7D4WMu&amp;sharer_sharetime=1595375829730&amp;sharer_shareid=0f58d2651811c845be4164b159d219a9#rd">自动化非标设计各标准件选型知识</a></p><p><ahref="https://mp.weixin.qq.com/s?__biz=MzI5MjM1NDY3MQ==&amp;mid=2247483685&amp;idx=1&amp;sn=139281432bdc36e55bee02435898dfdf&amp;chksm=ec03ee25db74673319fd37c4f2667215bb9b408f374cce799df90bddf8fbf5e20f2cedc1ec48&amp;mpshare=1&amp;scene=1&amp;srcid=0726oe5pUMPuvwctF44hLZK7&amp;sharer_sharetime=1595697081316&amp;sharer_shareid=0f58d2651811c845be4164b159d219a9#rd">Mathematica解决倒立摆问题</a></p><p><ahref="https://mp.weixin.qq.com/s?__biz=MzUzNTI4NjIxMA==&amp;mid=2247484256&amp;idx=1&amp;sn=f045a315ee4dae2f77fe2578dc615d70&amp;chksm=fa869bcdcdf112db2376de8b0b46985fc6abe24dc0f9899b490b4600adf51311aaa7428da723&amp;mpshare=1&amp;scene=1&amp;srcid=0726SDAoUQgcVakC2FpeBvDI&amp;sharer_sharetime=1595697188307&amp;sharer_shareid=0f58d2651811c845be4164b159d219a9#rd">手把手教你在Mathematica 科学计算软件中搭建机器人的仿真环境</a></p><p><ahref="https://mp.weixin.qq.com/s?__biz=MzUwOTA4MDM2OQ==&amp;mid=2247491851&amp;idx=1&amp;sn=a3dd53f7fbaeedb9cb05f630b6b19555&amp;chksm=f9150755ce628e4337f5ee9e93925e65bf769d6d8f72a2c72cbb4a052f7704a0ec9a73b27892&amp;mpshare=1&amp;scene=1&amp;srcid=07289tnwy6s8L5RNtPCpOjR8&amp;sharer_sharetime=1595950060253&amp;sharer_shareid=0f58d2651811c845be4164b159d219a9#rd">近代数学13个学派！</a></p><p><ahref="https://zhuanlan.zhihu.com/p/156760739">从零学分析力学（拉格朗日力学篇）</a></p><p><ahref="https://mp.weixin.qq.com/s?__biz=MzUwOTA4MDM2OQ==&amp;mid=2247491969&amp;idx=1&amp;sn=f8ade3f98eb8e592ef1401498efd9c41&amp;chksm=f91507dfce628ec9dbc088ac798f9e7cdc3d1fb37a1648c5ff4aaa932907eccc29681d88c19b&amp;mpshare=1&amp;scene=1&amp;srcid=0731LYpDk9y2kua8rBVWAzHh&amp;sharer_sharetime=1596189376941&amp;sharer_shareid=0f58d2651811c845be4164b159d219a9#rd">最全数学各个分支简介！</a></p><p><ahref="https://mp.weixin.qq.com/s?__biz=MzI2OTE0ODY5Mw==&amp;mid=2247489996&amp;idx=1&amp;sn=01182e2bdcb3a091dd9ea29f9e9e2e8d&amp;chksm=eae5eeb6dd9267a0a916dac4a670848bb4c2b8f75e4d3c388daf39efeff62ad69bd4c17ec565&amp;scene=21#wechat_redirect">太经典啦！单片机常用的14个C语言算法（附详细代码）</a></p><p><ahref="https://mp.weixin.qq.com/s?__biz=MzI4NDAwOTgzMw==&amp;mid=2650623361&amp;idx=1&amp;sn=620d89b7cf4d3cf8a75765dfd72cff09&amp;chksm=f3881987c4ff9091b063a900d7e85fe8429c0db393c4c7dd29b533d9c556bf65db32e1b76179&amp;mpshare=1&amp;scene=1&amp;srcid=0803gxGwhkTcX2FWdkynOtqd&amp;sharer_sharetime=1596462756522&amp;sharer_shareid=0f58d2651811c845be4164b159d219a9#rd">ARM、MCU、DSP、FPGA、SOC各是什么？区别是什么？</a></p><p><ahref="https://mp.weixin.qq.com/s?__biz=MzI4NTQ4NTA3NA==&amp;mid=2247491834&amp;idx=2&amp;sn=07a20083f24aed53c84e9958e43d0725&amp;chksm=ebe9d187dc9e5891e959f1c569feae044b98b782208f72e5515f2c1e7c31dd69491a6d8fcb57&amp;mpshare=1&amp;scene=1&amp;srcid=08078uKLI022sHHFdUDydJKO&amp;sharer_sharetime=1596782562098&amp;sharer_shareid=0f58d2651811c845be4164b159d219a9#rd">收藏| C语言最全入门笔记</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a
href=&quot;https://mp.weixin.qq.com/s?__biz=MzU3NjE4NjQ4MA==&amp;amp;mid=2247491282&amp;amp;idx=3&amp;amp;sn=2fb6d69507fb2a171ebef1ddfcbea7b0&amp;amp;chks</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>PotPlayer播放抖音直播</title>
    <link href="https://oceanyouth.github.io/2023/06/11/%E5%A8%B1%E4%B9%90%E5%88%86%E5%8C%BA-%E5%A4%9A%E5%AA%92%E4%BD%93-2023-06-11-PotPlayer%E6%92%AD%E6%94%BE%E6%8A%96%E9%9F%B3%E7%9B%B4%E6%92%AD/"/>
    <id>https://oceanyouth.github.io/2023/06/11/%E5%A8%B1%E4%B9%90%E5%88%86%E5%8C%BA-%E5%A4%9A%E5%AA%92%E4%BD%93-2023-06-11-PotPlayer%E6%92%AD%E6%94%BE%E6%8A%96%E9%9F%B3%E7%9B%B4%E6%92%AD/</id>
    <published>2023-06-11T09:40:15.000Z</published>
    <updated>2023-06-11T09:41:41.188Z</updated>
    
    <content type="html"><![CDATA[<table style="width:15%;"><colgroup><col style="width: 15%" /></colgroup><tbody><tr class="odd"><td>2023-06-11 17:40:35 Written by Fu, Jian</td></tr><tr class="even"><td>操作原因：一般网页占内存大，且会卡，而避免下载抖音、Bolibili客户端。</td></tr><tr class="odd"><td>参考：<ahref="https://www.bilibili.com/read/cv20275846/">查看抖音直播源和保存直播视频</a></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table style=&quot;width:15%;&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 15%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;2023-06-11 17:40:35 Written </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>SolidWorks_Simscape插件安装</title>
    <link href="https://oceanyouth.github.io/2023/06/07/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-06-07-SolidWorks-Simscape%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    <id>https://oceanyouth.github.io/2023/06/07/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-06-07-SolidWorks-Simscape%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/</id>
    <published>2023-06-07T06:52:53.000Z</published>
    <updated>2023-06-07T07:52:15.587Z</updated>
    
    <content type="html"><![CDATA[<h1 id="simscape-multibody"><ahref="https://ww2.mathworks.cn/products/simscape-multibody.html">SimscapeMultibody</a></h1><p>对多体机械系统进行建模和仿真</p><p>Simscape Multibody™（前身为SimMechanics™）提供了适用于三维机械系统（例如机器人、汽车悬架系统、建筑设备和飞机起落架）的多体仿真环境。您可以使用表示物体、关节、约束、力元件和传感器的模块对多体系统进行建模。SimscapeMultibody 会建立整个机械系统的运动方程并解出该方程。您可将完整的 CAD装配件（包括所有质点、惯量、关节、约束和三维几何结构）导入到模型中。您可以通过自动生成的三维动画直观地了解系统动态特性。</p><p>Simscape Multibody 可帮助您开发控制系统并测试系统级性能。您可以利用MATLAB® 变量和表达式参数化您的模型，并在 Simulink®环境下为多体系统设计控制系统。您可以利用 Simscape™产品系列中的组件将液压、电气、气动和其他物理系统集成到您的模型中。SimscapeMultibody 还支持生成 C代码，以便您将模型部署到其他仿真环境，包括硬件在环 (HIL) 系统。</p><p><ahref="https://blog.csdn.net/h542812556sdu/article/details/126471769">SimscapeMultibody Link插件安装详细步骤</a></p><p>在mathworks官网上下载插件，在matlab里面进行安装，这样插件就在Solidworks里面显示并可以使用了，直接导出.xml文件。matlab里面的函数：smimport('name.xml')进行模型导入，得到.slx模型文件。</p><p>在matlab文件中插件安装时可能会弹出无法覆盖文件等问题，直接管理员身份运行matlab文件即可。</p><hr /><h1 id="solidworks文件导入matlab以及matlab的模拟仿真三部曲"><ahref="https://www.bilibili.com/video/BV17Y4y147Rt/?spm_id_from=333.788&amp;vd_source=ed137998fd1ae1b4a12558edaa6b34ab">solidworks文件导入Matlab以及Matlab的模拟仿真三部曲</a></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;simscape-multibody&quot;&gt;&lt;a
href=&quot;https://ww2.mathworks.cn/products/simscape-multibody.html&quot;&gt;Simscape
Multibody&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;对多体机械系统进行建</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>研究学者</title>
    <link href="https://oceanyouth.github.io/2023/04/20/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-01-%E9%80%9A%E8%AF%86-2023-04-20-%E7%A0%94%E7%A9%B6%E5%AD%A6%E8%80%85/"/>
    <id>https://oceanyouth.github.io/2023/04/20/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-01-%E9%80%9A%E8%AF%86-2023-04-20-%E7%A0%94%E7%A9%B6%E5%AD%A6%E8%80%85/</id>
    <published>2023-04-20T11:41:46.000Z</published>
    <updated>2023-04-21T04:48:06.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="流体力学领域">流体力学领域</h1><h2 id="gustav-robert-kirchhoff"><ahref="https://baike.baidu.com/item/%E5%8F%A4%E6%96%AF%E5%A1%94%E5%A4%AB%C2%B7%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%9F%BA%E5%B0%94%E9%9C%8D%E5%A4%AB/2371618?fromtitle=%E5%9F%BA%E5%B0%94%E9%9C%8D%E5%A4%AB&amp;fromid=639565&amp;fr=aladdin">GustavRobert Kirchhoff</a></h2><p>古斯塔夫·罗伯特·基尔霍夫（Gustav RobertKirchhoff，1824年3月12日～1887年10月17日），德国物理学家，出生于柯尼斯堡（今天：加里宁格勒）。他提出了稳恒电路网络中电流、电压、电阻关系的两条电路定律，即著名的基尔霍夫电流定律（KCL）和基尔霍夫电压定律（KVL），解决了电器设计中电路方面的难题。</p><p>Kirchhoff equations</p><p>https://handwiki.org/wiki/Physics:Kirchhoff_equationshttps://en.wikipedia.org/wiki/Kirchhoff_equationshttps://en.wikipedia.org/wiki/Gustav_Kirchhoff</p><h2 id="sir-horace-lamb"><ahref="https://baike.baidu.com/item/%E8%B4%BA%E6%8B%89%E6%96%AF%C2%B7%E5%85%B0%E5%A7%86/15698252?fr=aladdin">SirHorace Lamb</a></h2><p>贺拉斯·兰姆，1849年11月27日~1934年12月4日，1849年11月27日生于英国斯托克波特，1934年12月4日卒于剑桥。</p><p>兰姆所著《水动力学》（1878）原名《流体运动教学理论》，1895年增订再版，改名《水动力学》。该书是19世纪末叶以前经典流体力学的代表作和总结，出版后的几十年同一直是流体力学方面的标准著作，甚至到现在仍有重要参考价值。兰姆的其他著作有《无限小分析》（1897）、《声音动力理论》（1910）、《静力学》（包括流体静力学和弹性理论初步，1912）、《动力学》（1914）、《高等力学》（1920）等。</p><p>https://www.britannica.com/biography/Horace-Lambhttps://adb.anu.edu.au/biography/lamb-sir-horace-3982https://book.douban.com/subject/19968417/https://www.ecsponline.com/goods.php?id=188059https://tampermonkey.getpdfnow.com/home/default.aspx?_k=gf&amp;key=9787030024978https://www.nature.com/articles/42156http://product.dangdang.com/23806464.html#ddclick_reco_reco_relate</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;流体力学领域&quot;&gt;流体力学领域&lt;/h1&gt;
&lt;h2 id=&quot;gustav-robert-kirchhoff&quot;&gt;&lt;a
href=&quot;https://baike.baidu.com/item/%E5%8F%A4%E6%96%AF%E5%A1%94%E5%A4%AB%C2</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>论文中的定理-引理-推论</title>
    <link href="https://oceanyouth.github.io/2023/04/20/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-00-%E7%A7%91%E7%A0%94-2023-04-20-%E8%AE%BA%E6%96%87%E4%B8%AD%E7%9A%84%E5%AE%9A%E7%90%86-%E5%BC%95%E7%90%86-%E6%8E%A8%E8%AE%BA/"/>
    <id>https://oceanyouth.github.io/2023/04/20/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-00-%E7%A7%91%E7%A0%94-2023-04-20-%E8%AE%BA%E6%96%87%E4%B8%AD%E7%9A%84%E5%AE%9A%E7%90%86-%E5%BC%95%E7%90%86-%E6%8E%A8%E8%AE%BA/</id>
    <published>2023-04-20T07:11:56.000Z</published>
    <updated>2023-06-20T15:56:53.778Z</updated>
    
    <content type="html"><![CDATA[<h1id="论中的定理theorem引理lemma推论corollary">论⽂中的定理（Theorem）、引理（Lemma）、推论（Corollary）</h1><h2 id="名词解释">名词解释</h2><pre><code>- Theorem：就是定理，⽐较重要的，简称是 Thm。- Lemma：⼩⼩的定理，通常是为了证明后⾯的定理，如果证明的篇幅很长時，可能會把证明拆成⼏个部分來论述，虽然篇幅可能变多，但</code></pre><p>派络却很清楚。 - Corollary：推论。由定理⽴即可推知的結果。 -Property：性质，结果虽然值得⼀記，卻沒定理來的深刻。 -Proposition：有⼈翻译为命題，有些作者喜欢⽤，⼤概也可以算是⽐较简单的定理的⼀种称呼。 -Claim：证明时先论述⼀个结果，再作证明。看的⼈⽐较轻松。 -Note：通常只是⼀个注解。 - Remark：涉及⼀些结论，⽐较起來 "Note"⽐较像说明， "remark" 則常是⾮正式的定理。</p><p>⾸先，定义和公理是任何理论的基础，定义解决了概念的范畴，公理使得理论能够被⼈的理性所接受。其次，定理和命题就是在定义和公理的基础上通过理性的加⼯使得理论的再延伸，我认为它们的区别主要在于，定理的理论⾼度⽐命题⾼些，定理主要是描述各定义（范畴）间的逻辑关系，命题⼀般描述的是某种对应关系（⾮范畴性的）。⽽推论就是某⼀定理的附属品，是该定理的简单应⽤。最后，引理就是在证明某⼀定理时所必须⽤到的其它定理。⽽在⼀般情况下，就像前⾯所提到的定理的证明是依赖于定义和公理的。</p><p>1.引理和定理应该是根据⽂章⽬的不同⽽区分的，同样的论点在这篇⽂章可以是引理，在那篇⽂章可以是定理。2.如果为了说明⼀个问题进⾏论证，但是在论证前需要证明若⼲个⼩问题，那么这些若⼲个⼩问题的结论就是引理，⽽这个问题的论证将会需要引⽤到前⾯的引理，该问题的结论就是定理。3.引理是为定理作准备的。⽂章中的定理才是需要说明的主要问题或者⽬的。</p><p>就如Doppler说的， "Theorem" 本⾝是⼀个⼤result，"Lemma" 是 prove“Theorem“ 之前⽤的⼀个 result。"Corollary" 是可以从 "Theorem" ⾥直接deduce/prove 出来的 result。" Proposition" 是⼀个还⽆法⼤到变成"Theorem" 的⼀个 result (当作⼩ theorem )。 (1)Definition（定义）------a precise and unambiguous description of themeaning of a mathematical term. It characterizes the meaning of a wordby giving all the properties and only those properties that must betrue. (2) Theorem（定理）----a mathematical statement that is provedusing rigorous mathemat-ical reasoning. In a mathematical paper, theterm theorem is often reserved for the most important results. (3)Lemma（引理）----a minor result whose sole purpose is to help in provinga theorem. It is a stepping stone on the path to proving a theorem. Veryoccasionally lemmas can take on a life of their own (Zorn's lemma,Urysohn's lemma, Burnside's lemma,Sperner's lemma). (4)Corollary（推论）-----a result in which the (usually short) proof reliesheavily on a given theorem (we often say that is a corollary of TheoremA"). (5) Proposition（命题）-----a proved and often interesting result,but generally less important than a theorem. (6)Conjecture（推测，猜想）----a statement that is unproved, but isbelieved to be true (Collatz conjecture, Goldbach conjecture, twin primeconjecture). (7) Claim（断⾔）-----an assertion that is then proved. Itis often used like an informal lemma. (8)Axiom/Postulate------（公理/假定）a statement that is assumed to be truewithout proof. These are the basic building blocks from which alltheorems are proved (Eu-clid's ve postulates, Zermelo-Frankel axioms,Peano axioms). (9) Identity（恒等式）-----a mathematical expressiongiving the equality of two (often variable) quantities (trigonometricidentities, Euler's identity). (10) Paradox（悖论）----a statement thatcan be shown, using a given set of axioms and de nitions, to be bothtrue and false. Paradoxes are often used to show the inconsistencies ina awed theory (Russell's paradox). The term paradox is often usedinformally to describe a surprising or counterintuitive result thatfollows from a given set of rules (Banach- Tarski paradox, Alabamaparadox, Gabriel's horn).</p><h2 id="参考">参考</h2><p><ahref="https://www.cnblogs.com/kailugaji/p/13625331.html">英文论文中Remark所放位置及其作用</a></p><table style="width:15%;"><colgroup><col style="width: 15%" /></colgroup><tbody><tr class="odd"><td>2023-06-20 22:47:59 Written by Fu, Jian</td></tr><tr class="even"><td># 多模式、多模态</td></tr><tr class="odd"><td>multi-mode 多模式</td></tr><tr class="even"><td>multimodal = multiple “modes” 多模态</td></tr><tr class="odd"><td><imgsrc="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20230620235537.png"alt="20230620235537" /></td></tr><tr class="even"><td>multi-mode optical fiber <ahref="https://en.wikipedia.org/wiki/Multi-mode_optical_fiber">多模光纤</a>Multi-mode fiber has a fairly large core diameter that enables<strong>multiple light modes</strong> to be propagated and limits themaximum length of a transmission link because of <strong>modal</strong>dispersion. 多模光纤中的多模应该指的是光纤中存在多种光的模式。<ahref="https://www.zhihu.com/question/385828823">模式就是波导传输的时候电磁波的空间分布情况。</a></td></tr><tr class="odd"><td>single-mode optical fiber <ahref="https://en.wikipedia.org/wiki/Single-mode_optical_fiber">单模光纤</a></td></tr><tr class="even"><td>多模式 多模态</td></tr><tr class="odd"><td><a href="https://www.sohu.com/a/549937779_114819">什么是模态？</a><ahref="https://baike.baidu.com/item/%E6%A8%A1%E9%97%B4%E8%89%B2%E6%95%A3/5930588?fromtitle=%E6%A8%A1%E5%BC%8F%E8%89%B2%E6%95%A3&amp;fromid=4805849&amp;fr=aladdin">模间色散，模式色散，模态色散</a><ahref="https://baike.baidu.com/item/%E6%A8%A1%E5%86%85%E8%89%B2%E6%95%A3/5930573?fr=aladdin">模内色散</a>三种光纤色散：模式色散、材料色散、波导色散。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1
id=&quot;论中的定理theorem引理lemma推论corollary&quot;&gt;论⽂中的定理（Theorem）、引理（Lemma）、推论（Corollary）&lt;/h1&gt;
&lt;h2 id=&quot;名词解释&quot;&gt;名词解释&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;- Theorem：就是定理，⽐较</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>科研绘图</title>
    <link href="https://oceanyouth.github.io/2023/04/19/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-00-%E7%A7%91%E7%A0%94-2023-04-19-%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE/"/>
    <id>https://oceanyouth.github.io/2023/04/19/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-00-%E7%A7%91%E7%A0%94-2023-04-19-%E7%A7%91%E7%A0%94%E7%BB%98%E5%9B%BE/</id>
    <published>2023-04-19T07:38:49.000Z</published>
    <updated>2023-04-19T09:01:43.043Z</updated>
    
    <content type="html"><![CDATA[<h1 id="机械结构线框图">机械结构线框图</h1><h2 id="方法一">方法一</h2><pre><code>- Solidworks建模，存为.dwg格式- Auto CAD模型线框进行处理，打印为.pdf格式- 福昕阅读器打开文件，另存为.ppt格式- Powerpoint 2016打开，即可得到矢量图，可以在PPT中进行线框编辑，有时候会出现线条粗细不均匀的现象，可以进行编辑修改。</code></pre><h2 id="方法二">方法二</h2><pre><code>- Solidworks建模，存为.dwg格式- Auto CAD模型线框进行处理，存为.dwg格式（低版本）- AI打开，存为.pdf- 福昕阅读器打开文件，另存为.ppt格式- Powerpoint 2016打开，即可得到矢量图，可以在PPT中进行线框编辑，有时候会出现线条粗细不均匀的现象，可以进行编辑修改。</code></pre><h2 id="方法三">方法三</h2><p>上述两种方法均会出现线条粗细不一致，而且线条以块的形式存在，难以修改，只能在PPT中重新绘制。- Solidworks建模，存为.dwg格式 - AutoCAD模型线框进行处理，存为.dwg格式（低版本）。(注意CAD也可以发布.eps格式图片，但是不知道为什么会缺失图形元素)- AI打开，存为.eps - Powerpoint2016打开，即可得到矢量图（但可能会存在图形缺失，且不能进行编辑） -仍然在PPT中编辑，右键编辑图片，可将其转换成MicrosoftOffice图形对象，此时图形便转化为了PPT能识别的对象，是组合图，删除组合图外框等不需要的元素即可。</p><p>基于以上思路，可以在AutoCAD中涉及任意的线框图形，然后在PPT中进行编辑加工，可以作出多种需求的图。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;机械结构线框图&quot;&gt;机械结构线框图&lt;/h1&gt;
&lt;h2 id=&quot;方法一&quot;&gt;方法一&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;- Solidworks建模，存为.dwg格式
- Auto CAD模型线框进行处理，打印为.pdf格式
- 福昕阅读器打开文件，另存为.ppt格</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>上位机开发的常用语言</title>
    <link href="https://oceanyouth.github.io/2023/04/19/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-04-19-%E4%B8%8A%E4%BD%8D%E6%9C%BA%E5%BC%80%E5%8F%91%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AF%AD%E8%A8%80/"/>
    <id>https://oceanyouth.github.io/2023/04/19/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-04-19-%E4%B8%8A%E4%BD%8D%E6%9C%BA%E5%BC%80%E5%8F%91%E7%9A%84%E5%B8%B8%E7%94%A8%E8%AF%AD%E8%A8%80/</id>
    <published>2023-04-18T16:15:53.000Z</published>
    <updated>2023-04-18T16:33:34.273Z</updated>
    
    <content type="html"><![CDATA[<h1 id="c-and-qt">C++ and QT</h1><pre><code>- QT是一个跨平台的GUI框架- C++运行效率比较高- C++学习成本比较高- C++开发效率不高</code></pre><h1 id="labview">Labview</h1><pre><code>- LabVIEW图形化编程，易上手- LabVIEW对嵌入式硬件支持较好- LabVIEW数据处理和分析能力较强- LabVIEW不适合做大项目，修改较麻烦- LabVIEW在数据库、网络应用等较欠缺- LabVIEW兼容性较差，打包麻烦</code></pre><h1 id="java">Java</h1><pre><code>- JAVA完全面向对象，适合大型软件开发- JAVA很早就开源跨平台，生态完善- JAVA在工控领域应用较少，资源少</code></pre><h1 id="python">Python</h1><pre><code>- Python简单易用，学习成本低- Python具有丰富的库，胶水语言- Python在人工智能领域占绝对优势- Python运行速度慢，加密困难- Python在工控领域应用较少，资源少</code></pre><h1 id="vb-6.0">VB 6.0</h1><pre><code>- VB6是早期比较流行的桌面开发语言- 由于.NET的盛起，VB6已经被淘汰</code></pre><h1 id="vb.net">VB.NET</h1><pre><code>- VB.NET也是.NET框架下的一种语言- 微软决定了VB.NET使用越来越少</code></pre><h1 id="c.net">C#.NET</h1><pre><code>- C#完全面向对象，比较容易上手- C#在上位机领域应用广泛、资料多- C#支持桌面、WEB、移动端开发- C#加密比较困难，容易反编译- C#运行效率相对C/C++要低</code></pre><h1id="其它易语言pascaldephinwpfqmljavascriptcsshtmlpycqtqmlmfcuniapp">其它：易语言、pascal、dephin、WPF、qml=javascript+css+html、py+c+qt+qml、mfc、uniapp</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;c-and-qt&quot;&gt;C++ and QT&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;- QT是一个跨平台的GUI框架
- C++运行效率比较高
- C++学习成本比较高
- C++开发效率不高&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&quot;labview&quot;&gt;Labvi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>机电一体化系统</title>
    <link href="https://oceanyouth.github.io/2023/04/18/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-00-%E7%A7%91%E7%A0%94-2023-04-18-%E6%9C%BA%E7%94%B5%E4%B8%80%E4%BD%93%E5%8C%96%E7%B3%BB%E7%BB%9F/"/>
    <id>https://oceanyouth.github.io/2023/04/18/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-00-%E7%A7%91%E7%A0%94-2023-04-18-%E6%9C%BA%E7%94%B5%E4%B8%80%E4%BD%93%E5%8C%96%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-04-18T15:45:56.000Z</published>
    <updated>2023-04-18T16:14:26.273Z</updated>
    
    <content type="html"><![CDATA[<h1 id="机电一体化的基本概念">机电一体化的基本概念</h1><p><ahref="https://baike.baidu.com/item/%E6%9C%BA%E7%94%B5%E4%B8%80%E4%BD%93%E5%8C%96/1648?fr=aladdin#8">机电一体化</a>，机械电子工程，mechanicaland electronicalengineering，研究将<strong>电子器件的信息处理和控制功能</strong>附加或融合在机械装置中的一种复合化技术，是机械工程与自动化的一种。将机械技术、电工电子技术、微电子技术、信息技术、传感器技术、接口技术、信号变换技术等多种技术进行有机地结合，并综合应用到实际中去的综合技术，现代化的自动生产设备几乎可以说都是机电一体化的设备。</p><p>一个机电一体化系统中一般由结构组成要素、动力组成要素、运动组成要素、感知组成要素、职能组成要素五大组成要素有机结合而成。-机械本体（结构组成要素）是系统的所有功能要素的机械支持结构，一般包括有机身、框架、支撑、联接等。-动力驱动部分（动力组成要素）依据系统控制要求，为系统提供能量和动力以使系统正常运行。-测试传感部分（感知组成要素）对系统的运行所需要的本身和外部环境的各种参数和状态进行检测，并变成可识别的信号，传输给信息处理单元，经过分析、处理后产生相应的控制信息。-控制及信息处理部分（职能组成要素）将来之测试传感部分的信息及外部直接输入的指令进行集中、存储、分析、加工处理后，按照信息处理结果和规定的程序与节奏发出相应的指令，控制整个系统有目的的运行。-执行机构（运动组成要素）；根据控制及信息处理部分发出的指令，完成规定的动作和功能。机电一体化系统一般由机械本体、检测传感部分、电子控制单元、执行器和动力源5个组成部分构成。</p><h2 id="专业软件">专业软件</h2><p>机械设计：Auto CAD、UG、Solidworks 电子仿真：NI Multisim、Proteus液压与气动仿真：AMEsim 机械结构仿真：Ansys Mechanical流体仿真：Fluent、ICEM CFD、Space Claim 数值计算：Matlab、Mathmatica优化：Isight 跨平台编辑器：Visual Studio Code 编程语言：C、VB6.0、Python、Markdown、Latex、Matlab</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;机电一体化的基本概念&quot;&gt;机电一体化的基本概念&lt;/h1&gt;
&lt;p&gt;&lt;a
href=&quot;https://baike.baidu.com/item/%E6%9C%BA%E7%94%B5%E4%B8%80%E4%BD%93%E5%8C%96/1648?fr=aladdin</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>菜鸟电路解析-郭天祥</title>
    <link href="https://oceanyouth.github.io/2023/04/15/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-06-%E7%94%B5%E6%B0%94-2023-04-15-%E8%8F%9C%E9%B8%9F%E7%94%B5%E8%B7%AF%E8%A7%A3%E6%9E%90-%E9%83%AD%E5%A4%A9%E7%A5%A5/"/>
    <id>https://oceanyouth.github.io/2023/04/15/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-06-%E7%94%B5%E6%B0%94-2023-04-15-%E8%8F%9C%E9%B8%9F%E7%94%B5%E8%B7%AF%E8%A7%A3%E6%9E%90-%E9%83%AD%E5%A4%A9%E7%A5%A5/</id>
    <published>2023-04-15T05:17:32.000Z</published>
    <updated>2023-04-15T07:02:53.950Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相关介绍">相关介绍</h1><p>动画课件软件——VideoScribe在线电路仿真软件——https://falstad.com/circuit/circuitjs.html电路仿真软件——Multisim</p><h1 id="菜鸟电路解析001-简单的直流电路也会暗藏玄机kcl真好用-neo"><ahref="https://www.bilibili.com/video/BV12L411L7QG/?spm_id_from=333.999.0.0&amp;vd_source=ed137998fd1ae1b4a12558edaa6b34ab">《菜鸟电路解析》001-简单的直流电路也会暗藏玄机，KCL真好用-Neo</a></h1><ul><li>KCL基尔霍夫电流定律：有进有出，形成回路。节点电流定律。</li><li>节点：交点、元器件、完整电路</li><li>电压、电势、电位</li><li>叠加原理</li><li>信号地、回流地、</li></ul><h1id="菜鸟电路解析002-如何判断电路中的导线是否有电流kcl就是yyds-neo"><ahref="https://www.bilibili.com/video/BV1bZ4y1Q7e8/?spm_id_from=333.788&amp;vd_source=ed137998fd1ae1b4a12558edaa6b34ab">《菜鸟电路解析》002-如何判断电路中的导线是否有电流？KCL就是yyds-Neo</a></h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;相关介绍&quot;&gt;相关介绍&lt;/h1&gt;
&lt;p&gt;动画课件软件——VideoScribe
在线电路仿真软件——https://falstad.com/circuit/circuitjs.html
电路仿真软件——Multisim&lt;/p&gt;
&lt;h1 id=&quot;菜鸟电路解析0</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>机电相关概念</title>
    <link href="https://oceanyouth.github.io/2023/04/13/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-04-13-%E5%BC%B1%E7%94%B5%E4%B8%8E%E5%BC%BA%E7%94%B5/"/>
    <id>https://oceanyouth.github.io/2023/04/13/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-04-13-%E5%BC%B1%E7%94%B5%E4%B8%8E%E5%BC%BA%E7%94%B5/</id>
    <published>2023-04-13T06:35:11.000Z</published>
    <updated>2023-04-13T16:38:08.327Z</updated>
    
    <content type="html"><![CDATA[<h1 id="弱电与强电">弱电与强电</h1><p>弱电和强电不是以电压来区分的通俗点讲弱电是控制或者信号电而强电的做功用的动力电。</p><p>Strong electricity conducts electricity, while weak electricityconducts signals. 强电传导电力，而弱电传导信号。https://min.news/en/home/cb480e910216583ab4dd03fa09977e7c.html</p><p>Generally speaking, the processing object of strong electricity isenergy (electricity), which is characterized by <strong>high voltage,high current, high power, and low frequency</strong>. The mainconsiderations are reducing losses, improving efficiency, and weakcurrent. The main processing objects are information, that is, thetransmission and control of information. Its characteristics are<strong>low voltage, low current, low power, and highfrequency</strong>. The main consideration is the effect of informationtransmission, such as the fidelity, speed, and breadth of informationtransmission. ,reliability.https://www.carefibergroup.com/how-to-distinguish-between-strong-current-and-weak-current</p><h1 id="电子电路和电气电路">电子电路和电气电路</h1><p><ahref="https://www.eet-china.com/mp/a51867.html">电力、电子、电气、电器，这次说明白了！</a>从学科划分的角度讲</p><p>电力、电子和电器都属于电气工程学科。电气工程一词来源于日本，其中的“气”来源于西方外文翻译（西方工业之初，动力机械均由蒸汽轮机驱动,后来用与发电，故"电气"开始乏指工业动力，现在电气泛指电），电气工程也就是电的工程。</p><p>1、电气：电子、电器和电力都属于电气工程，它是一个抽象的概念，不是具体指某个设备或器件、而是指整个系统和电子、电器和电力的范畴。</p><p>2、电力：电力是电气工程的强电部分，主要研究电能的提供（即电能的产生——发电系统）、传输（电力线路传输）、变换（高低压变换，变压器、断路器、接触器）；电力分为高压电、电压变配电；</p><p>3、电子：电子是指电气工程的弱电部分，主要研究信息的处理、变换；电子又可分为两块：电子电路和电子系统。-电子电路（电子元件：制作电路板和电子设计的电子零部件，如二极管、三极管、硅类、LED灯。电子器件：由单个和多个电路板组成的一个电子功能器件）。- 电子系统：由电子设备组成的系统即——弱电工程系统。</p><p>4、电器：电器是具体的设备，狭义上的电器指在工业领域开关。在民用领域，电器是指耗电类电气设备（即用电设备如洗衣机、电视、电冰箱）。</p><p>electricity electrical electronics <ahref="https://usic.sheffield.ac.uk/blog/difference-between-electrical-and-electronic-engineering">What'sthe difference between electrical and electronic engineering?</a>Electrical engineering is the design and application of systems,machinery and equipment that use electricity, electronics andelectromagnetism. To give you an understanding of what electricalengineers do, they research and develop electrical products and systemsfor buildings, transport systems and power distribution networks.</p><p><strong>A sub-category of electrical engineering</strong>, electronicengineering is the design and development of electronic circuits anddevices that use components like resistors, capacitors and inductors toperform their function. Electronic engineers design and developelectronic equipment, such as broadcast and communications systems.</p><p>Comparing these two types of engineering is like comparing themeaning of electric vs electronic. Electrical devices convert electricalenergy into other forms of energy, for example heat, light or sound.Electronic devices control the flow of electrons in order to perform atask. While electrical engineering is concerned with the large-scaleproduction and distribution of electrical power, electronic engineeringfocuses on smaller electronic circuits.</p><p>Studying electrical engineering at university will give you expertiseacross a range of topics that are central to electrical engineering, anda good command of engineering principles. You will coverelectromagnetism, <strong>electrical machines and drives</strong>,<strong>motion control systems</strong>, power systems and powerelectronics.</p><p>Electrical and electronics engineering is the branch of engineeringconcerned with practical applications of electricity in all its forms.Electronics engineering is the branch of electrical engineering whichdeals with the uses of the electromagnetic spectrum and the applicationof such electronic devices as integrated circuits and transistors.</p><h1 id="机电一体化">机电一体化</h1><p><ahref="https://baike.baidu.com/item/%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%B3%BB%E7%BB%9F/3321025">机器人系统</a>实际上是一个典型的机电一体化系统，包括机械系统、驱动系统、控制系统和感知系统四大部分。- 机械系统：机械结构和机构 -驱动系统：驱动源，电气、气压动、液压或其组合 -控制系统：（1）硬件（2）软件，人机交互系统和控制算法 -感知系统（传感）：系统状态传感器</p><p>human machine interaction system control systems drive systemsmechanical structural systems robot-environment interaction systemssensory system</p><p>机电一体化： 机械设计 电气设计控制系统设计：控制器设计、控制信号处理、控制算法开发 传感器与执行器软件编程</p><p>机械系统：机械结构、运动机构（运动学设计）、执行器和传感器等（传感器和执行器主要涉及安装与布局）；以上关键零部件组成一个个机械子系统。电气控制系统：电气系统、控制器、传感器（信号采集系统、感知）、执行器、通讯系统、能源系统（包括能源管理）等，保护系统（安全保护和故障自检）和调试系统。具有上述多种功能模块，但都可以进行统一划分，包括硬件设计和软件设计。硬件设计时，整个硬件电路中设置不同的模块与相应的机械子系统进行连接，实现信号传输（数据信号和控制信号）。软件设计主要是实现对传感器采集信号，处理和存储，对执行器发射控制信号进行</p><p>电气控制系统主要包含硬件设计和软件设计两个方面。 -硬件设计方面，主要涉及到各种电子元器件的选型、电路设计、PCB设计、电路测试和调试等。这些工作的目标是确保电气控制系统可以正常工作，并满足性能和稳定性要求。其中的典型元器件包括：微处理器、传感器、执行器、电机驱动器、放大器、模数转换器等。-软件设计方面，主要包括编程和调试工作，目的是编写控制程序，实现机器人的各种功能和任务。软件设计工作一般使用高级编程语言进行编写，如C++、Python等。软件设计还需要对控制器进行编程、测试、调试和优化，以确保机器人系统的高效、稳定和安全运行。软件设计也包括对控制器的固件进行更新和升级。实际应用中，从底层开始硬件设计是比较复杂的，因此通常进行成熟<strong>元器件模块</strong>的应用集成，属于硬件集成或硬件系统设计。而真正具有挑战性的是软件设计方面的工作，除了进行基本任务要求的编程实现外，还需要对控制算法的编程实现。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;弱电与强电&quot;&gt;弱电与强电&lt;/h1&gt;
&lt;p&gt;弱电和强电不是以电压来区分的
通俗点讲弱电是控制或者信号电而强电的做功用的动力电。&lt;/p&gt;
&lt;p&gt;Strong electricity conducts electricity, while weak electri</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>执行器</title>
    <link href="https://oceanyouth.github.io/2023/04/13/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-04-13-%E6%89%A7%E8%A1%8C%E5%99%A8/"/>
    <id>https://oceanyouth.github.io/2023/04/13/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-04-13-%E6%89%A7%E8%A1%8C%E5%99%A8/</id>
    <published>2023-04-13T06:09:54.000Z</published>
    <updated>2023-04-13T06:11:25.048Z</updated>
    
    <content type="html"><![CDATA[<p><strong>气动执行器</strong>的执行机构和调节机构是统一的整体，其执行机构有薄膜式、活塞式、拨叉式和齿轮齿条式。采用气体做动力介质，最大的优点是安全性高，对使用环境要求低，可应用于易燃易爆的工作场合。但出于气体的可压缩性，刚度相对较低的气动执行器响应较慢，分辨率欠佳，控制精度低，抗偏差能力较差，应用在动态力或摩擦较大情况卜时，极易引起设备的不良振动。且共能-重比差，功率密度低，较大驱动力的气动执行器极共复杂、笨重而昂贵。虽然在高精度控制方面不足，但由于气动执行器安全，易于操作、维护，初始投资省，有较高性价比，在化工、航大等领域应用广泛。</p><p><strong>电动执行器</strong>又称电动执行机构，使用单相或三相电动机驱动齿轮或蜗轮蜗杆输出直线或旋转运动。电动执行器可输出相对恒定的驱动力，高度稳定，抗偏差能力强，控制精度要比气动执行器高，不用借助其他辅助系统可自动保位，但其结构复杂，易发生故障，维护费用高，调节过于频繁会引起电动机发热，诚速齿轮易磨损。此外，电动执行器运行缓慢，难于实现大驱动力，且存在过载保护实现困难、不良位置等问题。电动执行器最适合开/关操作，主要应用于动力厂或核动力厂。</p><p><strong>电液执行器</strong>集成了电动操作的简易性、液压的动力快速、固态电子的可靠性和用户配置的灵活性，具有响应速度快、控制精度高、输出功率大、结构紧凑等优点。电液执行器克服了气动执行器的控制精度低、电动执行器的可控性差等问题，在一定的应用场合和工作环境下，具有无可比拟的优势，因而广泛应用在电厂、石化等比较特殊的场合。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;气动执行器&lt;/strong&gt;的执行机构和调节机构是统一的整体，其执行机构有薄膜式、活塞式、拨叉式和齿轮齿条式。采用气体做动力介质，最大的优点是安全性高，对使用环境要求低，可应用于易燃易爆的工作场合。但出于气体的可压缩性，刚度相对较低的气动执行器响应较慢，分辨</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>科学上网</title>
    <link href="https://oceanyouth.github.io/2023/03/24/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-03-24-%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>https://oceanyouth.github.io/2023/03/24/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2023-03-24-%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</id>
    <published>2023-03-24T12:22:12.000Z</published>
    <updated>2023-03-30T07:56:31.659Z</updated>
    
    <content type="html"><![CDATA[<p>Design and Construction of Hybrid Autonomous Underwater Glider forUnderwater Research</p><p><a href="https://www.knowbaike.com/it/40146.html">Clash</a>Clash是一款支持Windows、macOS、Android等多平台的代理软件，支持ss/v2ray/Trojan等，类Surge配置，macOS/Windows/Android上都已经有了图形界面，且召唤师已经支持ss/v2ray/Trojan的Clash订阅，使用起来已经非常简单，十分推荐使用。</p><p>clash有三种Clash For Windows 、Clash For Linux和clash for android三个主要的分支，大家在使用时，可能会将分支Clash ForWindows中的windows理解成windows系统下专用的分支。其实在这里，windows指的是带GUI界面的clash软件。在ubuntu中，相比较于安装ClashFor Linux，Clash For Windows更为方便和直观。</p><p><ahref="http://www.zztongyun.com/article/clash%E8%8A%82%E7%82%B9%E9%85%8D%E7%BD%AE">Clashfor Windows 介绍、配置与使用教程及CFW中文汉化版下载</a></p><p><ahref="https://www.hengxun.cn/news/content/3910">网络中的机场和梯子有什么区别？</a></p><p><ahref="http://zjtd1.com/zhl/29973.html#%E5%B0%8F%E7%81%AB%E7%AE%AD%E8%AE%A2%E9%98%85%E4%BA%86%E6%B2%A1%E6%9C%89%E7%94%A8">配置小火箭内的订阅与节点（节点小火箭免费节点更新附使用方法）</a></p><p>订阅的节点： （1）<a href="https://glados.rocks/console">GLaDOS</a>（2）<ahref="https://xn--mes358aby2apfg.com/#/dashboard">赔钱机场</a></p><p><a href="https://www.zhihu.com/question/507810862">clash forwindows如何设置指定IP或者网站才走代理?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Design and Construction of Hybrid Autonomous Underwater Glider for
Underwater Research&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.knowbaike.com/it/401</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>基于STM32F429_挑战者_开发板(资料)</title>
    <link href="https://oceanyouth.github.io/2023/03/18/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-06-%E7%94%B5%E6%B0%94-2023-03-18-%E5%9F%BA%E4%BA%8ESTM32F429-%E6%8C%91%E6%88%98%E8%80%85-%E5%BC%80%E5%8F%91%E6%9D%BF%EF%BC%88%E8%B5%84%E6%96%99%EF%BC%89/"/>
    <id>https://oceanyouth.github.io/2023/03/18/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-06-%E7%94%B5%E6%B0%94-2023-03-18-%E5%9F%BA%E4%BA%8ESTM32F429-%E6%8C%91%E6%88%98%E8%80%85-%E5%BC%80%E5%8F%91%E6%9D%BF%EF%BC%88%E8%B5%84%E6%96%99%EF%BC%89/</id>
    <published>2023-03-18T11:44:34.000Z</published>
    <updated>2023-10-21T01:33:37.206Z</updated>
    
    <content type="html"><![CDATA[<h2 id="section">----------------------------------</h2><h1 id="基本信息">基本信息</h1><h2 id="采购信息">采购信息</h2><p>STM32F429-V2-TZZ 野火STM32F429-V2挑战者开发板 fire-DAP-Normol野火DAP下载器（普通版）</p><h2 id="技术支持">技术支持</h2><p>加群 751391396 982814423 833394131 242612031 934981406 577387908951484006 315236045</p><p><a href="https://www.firebbs.cn/">野火论坛</a></p><h2 id="section-1">----------------------------------</h2><h1 id="a盘资料盘">A盘（资料盘）</h1><h2id="野火stm32f429挑战者v1与v2版本的差异">【野火】STM32F429挑战者V1与V2版本的差异</h2><ul><li><p><ahref="https://baike.baidu.com/item/JTAG%E6%8E%A5%E5%8F%A3/8854374?fr=aladdin">JTAG接口</a> JTAG接口(Joint Test ActionGroup，联合测试工作组)，是一种国际标准测试协议（IEEE1149.1兼容），主要用于芯片内部测试。现在多数的高级器件都支持JTAG协议，如DSP、FPGA器件等。标准的JTAG接口是4线：TMS、TCK、TDI、TDO，分别为模式选择、时钟、数据输入和数据输出线。</p></li><li><p><ahref="https://blog.csdn.net/dianji2015_/article/details/118272846">SWD</a>SWD：Serial WireDebug串行调试。由ARM公司开发出来的，目的是减少调试接口的引脚数。</p></li><li><p><ahref="https://cloud.tencent.com/developer/article/2069491">ST-LINK仿真器</a></p></li></ul><h2 id="建议学习的顺序">建议学习的顺序</h2><p>也是该盘符文件夹的目录，其内部PDF文件其实就是《STM32库开发实战指南》，即零死角玩转STM32-F429</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">00-开发板用前必读</span><br><span class="line">  请务必先按照该目录下的说明了解如何进行开机测试，</span><br><span class="line">  安装keil开发环境及给开发板下载程序。</span><br><span class="line">1-野火开源图书合集</span><br><span class="line">  包含野火各大开源图书，</span><br><span class="line">  若无STM32开发基础，请务必先学习《STM32库开发实战指南》</span><br><span class="line">2-开发板原理图</span><br><span class="line">  包含开发板的pdf版原理图，以及板子部分元件的封装，</span><br><span class="line">  在学习时需经常查阅配套的原理图。</span><br><span class="line">3-程序源码</span><br><span class="line">  这是一个空目录。</span><br><span class="line">  本目录中的内容已经根据配套教程转移了存储位置，</span><br><span class="line">  保留这个文件夹仅为了兼容教学视频里的目录，敬请谅解。</span><br><span class="line">4-开发软件</span><br><span class="line">  中包含一些常用的软件工具。</span><br><span class="line">5-硬件数据手册</span><br><span class="line">  包含开发板板载芯片的数据手册</span><br><span class="line">6-STM32官方资料</span><br><span class="line">  非常重要的《STM32参考手册》和《STM32数据手册》，固件库 以及 固件库说明文档 就是存放在这里。  </span><br><span class="line">7-配套模块资料</span><br><span class="line">  此处包含配套开发板的各大模块资料。  </span><br></pre></td></tr></table></figure><h2 id="开发板用前必读">0-开发板用前必读</h2><h3 id="第1章-如何安装keil5">第1章 如何安装KEIL5</h3><h3 id="第1章-如何用dap仿真器下载程序">第1章如何用DAP仿真器下载程序</h3><table><colgroup><col style="width: 100%" /></colgroup><tbody><tr class="odd"><td style="text-align: left;"># F429挑战者-视频盘</td></tr><tr class="even"><td style="text-align: left;">## 1</td></tr><tr class="odd"><td style="text-align: left;">## 2</td></tr></tbody></table><table style="width:54%;"><colgroup><col style="width: 54%" /></colgroup><thead><tr class="header"><th style="text-align: left;"># 基于STM32F429_挑战者_开发板</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;">- MMU内存管理单元→微处理器 -注意微处理器和微控制器的区别，</td></tr><tr class="even"><td style="text-align: left;">- STM32</td></tr><tr class="odd"><tdstyle="text-align: left;">STM32属于一个微控制器，自带了各种常用通信接口，功能非常强大：1、串口—USART，用于跟跟串口接口的设备通信，比如： USB转串口模块、ESP8266 WIFI、 GPS模块， GSM 模块，串口屏、指纹识别模块STM32属于一个微控制器，自带了各种常用通信接口，功能非常强大2、内部集成电路—I2C，用于跟I2C接口的设备通信，比如：EEPROM、电容屏、陀螺 仪MPU6050、 0.96寸OLED模块3、串行通信接口—SPI，用于跟SPI接口的设备通信，比如：串行FLASH、以太网W5500、音频模块VS1053 4、 SDIO、 FMC（ FSMC的超级）、 I2S、 SAI、 ADC、GPIO</td></tr><tr class="even"><td style="text-align: left;">Reference <ahref="https://www.eefocus.com/e/511363.html">spi是串口还是并口spi接口和串口的区别</a> <ahref="https://zhuanlan.zhihu.com/p/450963372">终于搞清了：SPI、UART、I2C通信的区别与应用</a><ahref="https://baike.baidu.com/item/USART/10593784?fr=aladdin">USART:(UniversalSynchronous/AsynchronousReceiver/Transmitter)通用同步/异步串行接收/发送器</a> <ahref="https://blog.csdn.net/Harrison509/article/details/120016981">SPI、I2C、UART（即串口）三种串行总线对比</a><ahref="https://blog.csdn.net/weixin_42216720/article/details/123450484">UART和USART的区别（UARTvs USART）</a> <ahref="https://blog.csdn.net/auspark/article/details/104669667">区分：串口，COM口，UART，USART</a></td></tr></tbody></table><ul><li>进制基础知识</li></ul><p>二进制：01 16进制：123456789ABCDEF 8bit=1Byte 1KB=1024Byte1MB=1024KB</p><p>位bit(<ahref="https://baike.baidu.com/item/%E5%AD%97%E9%95%BF/97660?fr=ge_ala">字长</a>)，处理字长为8位数据的CPU叫8位CPU。字节Byte=8bit 字Word=4Byte（32位系统）</p><p>32位单片机， 2<sup>32=4,294,967,296=16</sup>8</p><p>8位单片机 2^8=256</p><p>2^10=1024 1GB=1024MB=1024<em>1024KB=1024</em>1024*1024Byte=2^30Byte即32位单片机，2<sup>32Byte=2</sup>2GB</p><p><ahref="https://baike.baidu.com/item/%E4%B8%BB%E9%A2%91/103191?fr=aladdin">主频</a></p><p><ahref="https://zhuanlan.zhihu.com/p/582889346">单片机中的RAM、ROM与FLASH</a></p><p><ahref="https://m.php.cn/faq/501965.html">32位系统支持多大内存</a></p><p><ahref="https://baike.baidu.com/item/%E6%8E%A8%E6%8C%BD%E8%BE%93%E5%87%BA/731839?fr=aladdin">推挽输出,Push–pulloutput</a> <ahref="https://blog.csdn.net/ic2121/article/details/128946904">[技术讨论]STM32IO口输出之推挽输出和开漏输出对比</a></p><hr /><ul><li>STM32命名</li></ul><p>STM32是基于Cortex-M3系列的，而Cortex-M3处理器采用ARMv7-M的架构。</p><p>STM32系列专为要求高性能、低成本、低功耗的嵌入式应用设计的ARMCortex®-M0，M0+，M3, M4和M7内核。</p><p>主流产品（STM32F0、STM32F1、STM32F3）超低功耗产品（STM32L0、STM32L1、STM32L4、STM32L4+）高性能产品（STM32F2、STM32F4、STM32F7、STM32H7）</p><p>意法半导体 STMicroelectronics集团开发。意法半导体（ST）集团于1987年成立，是由意大利的SGS微电子公司和法国Thomson半导体公司合并而成。1998年5月，SGS-THOMSONMicroelectronics将公司名称改为意法半导体有限公司。意法半导体是世界最大的半导体公司之一，2006年全年收入98.5亿美元，2007年前半年公司收入46.9亿美元。</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/oceanyouth/picgodemo@main/img/20220626141011.png"alt="20220626141011" /><figcaption aria-hidden="true">20220626141011</figcaption></figure><p>STM32的硬件结构、软件底层（用库和不用库开发）</p><p>作为Cortex M3市场的最大占有者，ST公司在2011年又推出基于CortexM4内核的STM32F4系列产品，相对与STM32F1/F2等CortexM3产品，STM32F4最大的优势，就是新增了硬件FPU单元以及DSP指令，同时，STM32F4的主频也提高了很多，达到168Mhz（可获得210DMIPS的处理能力），这使得STM32F4尤其适用于需要浮点运算或DSP处理的应用，也被称之为：DSC，具有非常广泛的应用前景。</p><p>stm32型号命名规则 示例：</p><table><thead><tr class="header"><th>STM32</th><th>F</th><th>100</th><th>C</th><th>6</th><th>T</th><th>6</th><th>B</th><th>XXX</th></tr></thead><tbody><tr class="odd"><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td></tr></tbody></table><p>从上面的料号可以看出以下信息： ST品牌ARMCortex-Mx系列内核32位超值型MCU，LQFP-48封装闪存容量32KB，温度范围-40℃-85℃；1. 产品系列: STM32代表ST品牌Cortex-Mx系列内核（ARM）的32位MCU； 1.产品类型: F：通用快闪（Flash Memory）；L：低电压（1.65～3.6V）；F类型中F0xx和 F1xx系列为2.0～3.6V;F2xx和F4xx系列为1.8～3.6V;W：无线系统芯片,开发版. 1. 产品子系列：050：ARM Cortex-M0内核；051：ARM Cortex-M0内核；100：ARMCortex-M3内核，超值型； 101：ARM Cortex-M3内核，基本型； 102：ARMCortex-M3内核，USB基本型； 103：ARM Cortex-M3内核，增强型； 105：ARMCortex-M3内核，USB互联网型； 107：ARMCortex-M3内核，USB互联网型、以太网型； 108：ARMCortex-M3内核，IEEE802.15.4标准； 151：ARM Cortex-M3内核，不带LCD；152/162：ARM Cortex-M3内核，带LCD； 205/207：ARMCortex-M3内核，不加密模块.（备注：150DMIPS，高达1MB闪存/128+4KB RAM，USBOTG HS/FS，以太网，17个TIM，3个ADC，15个通信外设接口和摄像头；）215/217：ARMCortex-M3内核，加密模块。（备注：150DMIPS，高达1MB闪存/128+4KB RAM，USBOTG HS/FS，以太网，17个TIM，3个ADC，15个通信外设接口和摄像头；）405/407：ARMCortex-M4内核，不加密模块。（备注：MCU+FPU，210DMIPS，高达1MB闪存/192+4KBRAM， 1. USB OTGHS/FS，以太网，17个TIM，3个ADC，15个通信外设接口和摄像头）；415/417：ARMCortex-M4内核，加密模块。（备注：MCU+FPU，210DMIPS，高达1MB闪存/192+4KBRAM，USB OTGHS/FS，以太网，17个TIM，3个ADC，15个通信外设接口和摄像头）； 1. 管脚数:F：20PIN；G：28PIN；K：32PIN；T：36PIN；H：40PIN；C：48PIN；U：63PIN；R：64PIN；O：90PIN；V：100PINQ：132PIN；Z：144PIN；I：176PIN； 1. Flash存存容量: 4：16KB flash；（小容量）; 6：32KBflash；（小容量）;8：64KB flash；（中容量）;B：128KBflash；（中容量）;C：256KB flash；（大容量）;D：384KBflash；（大容量）;E：512KB flash；（大容量）;F：768KBflash；（大容量）;G：1MKB flash；（大容量） 1. 封装:T：LQFP；H：BGA；U：VFQFPN；Y：WLCSP/ WLCSP64； 1. 温度范围:6：-40℃-85℃；（工业级）; 7：-40℃-105℃；（工业级） 1. 内部代码: “A” orblank; A：48/32脚封装；Blank：28/20脚封装; 1. 包装方式： TR：带卷；XXX：盘装;D：电压范围1.65V – 3.6V且BOR无使能；无特性：电压范围1.8V –3.6V且BOR使能；</p><p>参考： 1. <ahref="https://www.cnblogs.com/tgcdz/p/6908394.html">stm32型号命名规则</a>------------------------------------------------------------</p><p>2023-02-28 11:05:37 Written by Fu, Jian - 其它笔记 <ahref="https://www.zhihu.com/question/545530296/answer/2594874831?utm_id=0">stm32sd卡写入数据速度太慢？</a></p><p><ahref="https://www.bilibili.com/read/cv7677948/">STM32萌新学习笔记-DMA+ADC</a></p><hr /><h3 id="什么是寄存器">05 什么是寄存器</h3><p>星号“<em>”在c语言中有三种含义，第一种为乘，应用于四则运算中，第二种为指针变量的定义，如int</em>a； ，第三种为取地址中的内容，如int b = *a； 。</p><p>寄存器编程和固件库编程</p><p>STM32丝印与方向；芯片的引脚，通过C语言编程控制引脚，输出高低电平。小圆点逆时针为引脚排列编号。</p><p>STM32内部架构</p><p>存储器映射</p><p>寄存器映射 总线-总线基地址-相对总线基地址的地址偏移 外设-外设基地址-寄存器-寄存器地址-相对GPIOH基址的偏移</p><p>Cortex-M4内核指的是什么？</p><p><ahref="https://zhuanlan.zhihu.com/p/473643975">一文搞懂内存映射(MemoryMap)原理</a></p><p><ahref="https://mp.weixin.qq.com/s/BaC2r8bZN4XvDkZloz_8ng">干货|STM32基础知识—内存映射</a></p><p>芯片能访问的存储空间有多大是由芯片内CPU的<strong>地址总线</strong>的数量决来定的，STM32芯片内部的地址总线为32根。</p><table style="width:15%;"><colgroup><col style="width: 15%" /></colgroup><tbody><tr class="odd"><td>2023-07-01 23:01:44 Written by Fu, Jian</td></tr><tr class="even"><td>- 处理器</td></tr><tr class="odd"><td>功能：运算+控制硬件地址空间：能够寻址的范围，32位有4GB的空间寻址能力，与硬件的总线带宽相关</td></tr><tr class="even"><td>寄存器的本质是存储器，CPU→寄存器（硬件控制器）→硬件</td></tr><tr class="odd"><td>寄存器（控制硬件）=RAM（读写数据）=ROM（读写程序），寄存器与存储器本质是一样的</td></tr><tr class="even"><td>Memory map地址空间</td></tr><tr class="odd"><td>ROM RAM SFR</td></tr><tr class="even"><td>Python等高级语言无法操纵寄存器。</td></tr><tr class="odd"><td>C语言中的宏定义，也就是头文件，对寄存器进行一个封装，是程序的可读性大大增加。</td></tr><tr class="even"><td>- <ahref="https://www.bilibili.com/video/BV1yA411C7L1/?spm_id_from=333.788&amp;vd_source=ed137998fd1ae1b4a12558edaa6b34ab">2.1寄存器</a></td></tr><tr class="odd"><td>数组（类型相同）和结构体（存储的类型可不相同），在内存里连续存储。</td></tr><tr class="even"><td>应用层程序 底层操作寄存器程序</td></tr><tr class="odd"><td>指针</td></tr><tr class="even"><td>寄存器是特殊的存储器，给寄存器地址命名的过程，就叫寄存器映射。</td></tr><tr class="odd"><td>寄存器地址映射（0x4001080C）→寄存器名称（GPIOA_ODR）</td></tr><tr class="even"><td>32位的操作系统支持4GB的内存，32位操作系统（32位CPU）数据总线宽度为32，内存寻址只能发送32位内存地址，32位能表示的内存地址个数有2^32=4GB，每个地址是一个字节。</td></tr><tr class="odd"><td>STM32也是32位芯片，寻址空间也是4GB。</td></tr><tr class="even"><td>Word =32bit=4Byte，STM32是按字进行访问的，一个寄存器长度为32bit（4个字节），一个GPIO口使用4bit，则一个寄存器可以配置8个GPIO口，两个寄存器才可以配置完一个端口的16个GPIO口。</td></tr></tbody></table><p>微控制器和微处理器的区别：chatgpt</p><p>微控制器（Microcontroller）和微处理器（Microprocessor）是两种不同类型的集成电路，用于执行计算和控制任务。它们在功能、应用和性能方面存在一些重要区别：- 功能和应用：微处理器：微处理器是一种<strong>高性能的中央处理单元（CPU）</strong>，专门设计用于执行通用计算任务。它通常不包括内置的存储器或外设控制功能。微处理器通常用于个人计算机、服务器、嵌入式系统中的高性能计算任务，如操作系统、应用程序和算法的执行。微控制器：微控制器是一种完整的嵌入式系统，它包含了一个<strong>小型的CPU、内存、输入/输出（I/O）引脚和外设控制电路</strong>，通常用于实时控制和嵌入式应用。微控制器的主要功能是控制和监控外部设备，如传感器、执行器和通信接口，通常在嵌入式系统、电子设备和嵌入式控制器中使用。- 集成度：微处理器：微处理器通常较大且功能强大，但它们通常不包括内置的RAM、闪存和外设。外围设备和存储器通常需要外部连接。微控制器：微控制器是高度集成的芯片，通常包括CPU核心、内存（RAM和闪存）、计时器、通信接口（如UART、SPI、I2C）、GPIO引脚以及各种外设（如ADC、PWM、定时器等）。这种高度集成的特性使得微控制器适用于嵌入式应用，因为它们可以在小型封装中提供完整的控制系统。- 功耗：微处理器：微处理器通常设计为高性能设备，消耗相对较多的电能。它们适用于需要执行复杂计算任务的应用，但通常不适用于电池供电的移动设备或功耗敏感的嵌入式系统。微控制器：微控制器通常设计为低功耗设备，适用于电池供电的应用。它们通常采用节能技术，例如休眠模式，以最大程度减少功耗。这使得它们在嵌入式系统中非常有用，特别是在需要长时间运行的电池供电设备中。- 应用领域：微处理器：微处理器通常用于一般计算、操作系统、桌面计算机、服务器和高性能应用，如图形处理、数据分析等。微控制器：微控制器通常用于嵌入式控制和实时系统应用，如汽车控制单元（ECU）、家用电器、医疗设备、嵌入式传感器和物联网（IoT）设备。总之，微控制器和微处理器是两种不同类型的芯片，各自适用于不同的应用领域和需求。微处理器更适合一般计算和高性能计算任务，而微控制器则更适合嵌入式系统和实时控制应用，具有更高的集成度和低功耗特性。选择哪种芯片取决于您的应用需求和性能要求。</p><hr /><p>32位控制器-chatgpt "32位控制器"指的是一种微控制器（Microcontroller）或微处理器（Microprocessor），其数据总线、地址总线或寄存器宽度等核心组件中的某一部分是32位宽度。这意味着它可以一次处理32位（4字节）的数据。这个数字通常用来描述处理器的位数。</p><p>具体来说，32位控制器具有以下特征： -数据宽度：32位控制器的数据总线宽度通常为32位，这意味着它可以同时处理32位的数据。这提供了更大的数据处理能力，有助于执行更复杂的计算和操作。- 寄存器位数：通常，32位控制器中的通用寄存器（General-PurposeRegisters）是32位宽度，这使得它们能够存储和处理32位的数据。 -<strong>地址总线</strong>：32位控制器的地址总线宽度通常也为32位，这允许它<strong>直接访问4GB（2^32字节）的内存地址空间</strong>。<font color=red>注意这里不是Gb，而是GB。</font>-算术和逻辑操作：32位控制器可以执行32位宽度的算术和逻辑操作，包括加法、减法、位与、位或、位异或等。这提供了更高的数据精度。-<strong>内存寻址</strong>：由于32位寻址能力，32位控制器可以直接寻址大容量的内存，适用于需要大量内存的应用。-性能：32位控制器通常具有较高的性能，适用于需要高速数据处理和复杂计算的应用。</p><p>32位控制器广泛用于各种嵌入式系统、通信设备、个人电脑、工控设备、嵌入式开发板和移动设备等各种应用中。这些控制器提供了更多的计算能力和内存寻址能力，适用于处理复杂的任务和大规模数据的应用场景。</p><hr /><h3 id="新建工程寄存器版">06 新建工程——寄存器版</h3><h3 id="使用寄存器点亮led灯">07 使用寄存器点亮LED灯</h3><h2 id="书籍配套例程-f429ig-v1v2">1-书籍配套例程-F429IG-V1V2</h2><h2 id="stm32f429官方固件库">2-STM32F429官方固件库</h2><h2 id="其它资源">3-其它资源</h2><h2 id="零死角玩转stm32-f429"><ahref="./2022-06-25-零死角玩转STM32_F429.md">零死角玩转STM32-F429</a></h2><p>该书名原本是《STM32库开发实战指南》</p><h2 id="section-2">---------------------------</h2><h1 id="补充知识">补充知识</h1><h2 id="开发stm32常用的开发环境">开发STM32常用的开发环境</h2><ul><li>STM32CubeIDE</li><li>Keil+CubeIDE</li><li>VS Code</li><li>Clion</li></ul><h2 id="section-3">----------------------------------</h2><h1 id="野火b站视频">野火B站视频</h1><p><ahref="https://www.bilibili.com/video/BV18X4y1M763/?vd_source=ed137998fd1ae1b4a12558edaa6b34ab">【野火】STM32HAL库开发实战指南 教学视频 手把手教学STM32全系列零基础入门CubeMX+HAL库，基于野火全系列STM32开发板</a></p><p>讲解思路：外设原理+器件原理+ST官方参考手册（说明书）+ST标准库（标准函数）=外设开发HAL库视频教学讲解</p><p>M3、M4、M7内核开发板 全功能开发板 电机开发板——F407骄阳电机开发板</p><p>不同内核，除了内部架构不同，引脚和主频也是不同的。</p><p>ARM</p><p>HAL，硬件抽象层，不同的芯片的标准库中的标准函数是有区别的，若硬件发生迭代，代码移植性较差，HAL库就是解决这一问题。即在不同开发板上进行移植。</p><p>CubeMX，但是HAL库运行效率较低，初学者很方便，但是后面其实可以进行代码优化。</p><p>思路： 原理介绍→各种协议、各种器件原理 搭配CubeMX→生成代码</p><p>F4系列带有DSP（数字信号处理）和FPU（浮点运算单元）。</p><p>工程组中添加文件和批量添加文件</p><p>translation 编译单个文件 .C build 编译整个工程的文件，仅编译新修改的rebuild 重新编译整个工程文件 batch build 批量编译 download 下载</p><p>Project Target Source Group</p><h2 id="p3-第二讲-keil的安装和使用1">P3 第二讲 KEIL的安装和使用1</h2><h3 id="keil包管理软件">Keil包管理软件</h3><ul><li>用于下载安装STM32 F4等系列的芯片（芯片包）</li><li>可以用于管理第三方组件，也就是一些协议</li></ul><h3 id="uvision软件使用">uVision软件使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">菜单栏</span><br><span class="line">  File</span><br><span class="line">  Edit</span><br><span class="line">  View：打开关闭工具栏</span><br><span class="line">  Project：多工程</span><br><span class="line">  Flash</span><br><span class="line">  Debug</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="p3-第二讲-keil的安装和使用1-1">P3 第二讲 KEIL的安装和使用1</h2><h2 id="section-4">---------------------------</h2><h1 id="野火-f429挑战者教学视频">野火-F429挑战者教学视频</h1><p>https://space.bilibili.com/356820657/channel/seriesdetail?sid=1702010</p><h2 id="入门篇">入门篇</h2><h2 id="中级篇">中级篇</h2><h2 id="高级篇">高级篇</h2><h2 id="大师篇">大师篇</h2><h2 id="section-5">----------------------------------</h2><h1 id="问题集锦">问题集锦</h1><h2 id="编译错误">## 编译错误</h2><p>2023-06-11 10:44:36 Written by Fu, Jian</p><p>错误提示如下： main.c(2): warning: invalid UTF-8 in comment[-Winvalid-utf8]</p><p>解决方案： <ahref="https://blog.csdn.net/zdwcmy/article/details/106368076">Keil v5MDK 编译UTF8字符串报错的解决办法</a> –no-multibyte-chars</p><p>但进行上述操作后仍报错 ArmClang: error: no such file or directory:'<A8>Cno-multibyte-chars'</p><p>后又删除“–no-multibyte-chars”，又编译成功。</p><hr />]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;section&quot;&gt;----------------------------------&lt;/h2&gt;
&lt;h1 id=&quot;基本信息&quot;&gt;基本信息&lt;/h1&gt;
&lt;h2 id=&quot;采购信息&quot;&gt;采购信息&lt;/h2&gt;
&lt;p&gt;STM32F429-V2-TZZ 野火STM32F429-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>参数辨识</title>
    <link href="https://oceanyouth.github.io/2023/03/13/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-07-%E6%8E%A7%E5%88%B6-2023-03-13-%E5%8F%82%E6%95%B0%E8%BE%A8%E8%AF%86/"/>
    <id>https://oceanyouth.github.io/2023/03/13/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-07-%E6%8E%A7%E5%88%B6-2023-03-13-%E5%8F%82%E6%95%B0%E8%BE%A8%E8%AF%86/</id>
    <published>2023-03-13T15:48:56.000Z</published>
    <updated>2023-03-13T16:00:00.297Z</updated>
    
    <content type="html"><![CDATA[<p><ahref="https://mp.weixin.qq.com/s?__biz=MzU1NjEwMTY0Mw==&amp;mid=2247501222&amp;idx=1&amp;sn=c592b15f1e0980e153aa145cb481cce6&amp;chksm=fbc8bcc2ccbf35d41b28176b1da97a33b3b663d4fe670b1c1b720c62b7fe2cc0cbad85b5adab&amp;scene=27">史上最通俗易懂的参数辨识教程！</a></p><p>关键步骤 - 建立物理模型（真实机械结构） -建立数学模型（动力学、运动学方程） - 数学模型线性化 -激励轨迹，充分激励物理对象的特性 - 数据采集与处理</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a
href=&quot;https://mp.weixin.qq.com/s?__biz=MzU1NjEwMTY0Mw==&amp;amp;mid=2247501222&amp;amp;idx=1&amp;amp;sn=c592b15f1e0980e153aa145cb481cce6&amp;amp;chks</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>chatGPT</title>
    <link href="https://oceanyouth.github.io/2023/03/12/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-08-%E7%BC%96%E7%A8%8B-2023-03-12-chatGPT/"/>
    <id>https://oceanyouth.github.io/2023/03/12/%E5%AD%A6%E4%B9%A0%E5%88%86%E5%8C%BA-08-%E7%BC%96%E7%A8%8B-2023-03-12-chatGPT/</id>
    <published>2023-03-12T14:56:13.000Z</published>
    <updated>2023-04-17T05:10:14.938Z</updated>
    
    <content type="html"><![CDATA[<table style="width:15%;"><colgroup><col style="width: 15%" /></colgroup><tbody><tr class="odd"><td>2023-03-12 22:56:25 Written by Fu, Jian</td></tr></tbody></table><p><a href="https://space.bilibili.com/392744177">ChatGPT的应用</a></p><ul><li>Excel VBA代码快速生成，类似的可以生成很多语言的代码，而且有详细的注释。</li><li>通过voice control for ChatGPT 浏览器扩展插件来实现。</li><li>通过一段背景描述，生成PPT的关键内容。</li><li>免费高效自学编程，</li></ul><table style="width:15%;"><colgroup><col style="width: 15%" /></colgroup><tbody><tr class="odd"><td>2023-03-29 22:12:04 Written by Fu, Jian</td></tr></tbody></table><table style="width:15%;"><colgroup><col style="width: 15%" /></colgroup><tbody><tr class="odd"><td>2023-04-17 12:21:55 Written by Fu, Jian</td></tr><tr class="even"><td>Scispace 网址：https://typeset.io/</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table style=&quot;width:15%;&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 15%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;2023-03-12 22:56:25 Written </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>机器人可视化仿真</title>
    <link href="https://oceanyouth.github.io/2022/11/22/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2022-11-22-%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%8F%AF%E8%A7%86%E5%8C%96%E4%BB%BF%E7%9C%9F/"/>
    <id>https://oceanyouth.github.io/2022/11/22/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2022-11-22-%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%8F%AF%E8%A7%86%E5%8C%96%E4%BB%BF%E7%9C%9F/</id>
    <published>2022-11-22T11:48:09.000Z</published>
    <updated>2023-03-16T01:09:25.432Z</updated>
    
    <content type="html"><![CDATA[<table style="width:15%;"><colgroup><col style="width: 15%" /></colgroup><tbody><tr class="odd"><td>2022-11-22 19:48:21 Written by Fu, Jian</td></tr></tbody></table><p><ahref="https://zhuanlan.zhihu.com/p/106364969?ivk_sa=1024320u">机器人常用可视化仿真工具</a></p><p><a href="https://zhuanlan.zhihu.com/p/344898671">仿真环境 Gazebo 和RViz</a></p><p><ahref="https://zhuanlan.zhihu.com/p/367660310">ROS入门（三）：gazebo详解</a></p><p>深海机器人视景仿真系统研究</p><p><a href="http://mevlab.zju.edu.cn/vd/1/1">水下AUV虚拟仿真实验</a></p><p><a href="https://www.yfworld.com/?p=5453">仿真 |机器人常用可视化仿真工具</a></p><table style="width:15%;"><colgroup><col style="width: 15%" /></colgroup><tbody><tr class="odd"><td>2023-03-13 23:09:23 Written by Fu, Jian</td></tr><tr class="even"><td># <ahref="https://blog.csdn.net/dyannacon/article/details/124830882">机器人仿真软件</a></td></tr><tr class="odd"><td>## 1、GazeboGazebo模拟器是一个免费的开源平台，可用于设计，开发，测试和可视化几乎任何类型的机器人。Gazebo可在Linux，Windows和Mac上运行，并且内置了对ROS（机器人操作系统）的支持。Gazebo支持多种高性能物理引擎，例如ODE，Bullet，Simbody和DART。它还使用ORGE3D图形引擎来渲染具有准确照明，阴影和纹理的高质量环境。Gazebo模拟器还附带了一些机器人模型，例如PR2，DX，IrobotCreate和TurtleBot，因此即使没有自己的机器人模型，也可以快速上手。它还支持广泛的传感器，并且可以模拟噪声和传感器故障，以准确模拟实际问题。甚至可以在云中运行Gazebo，并使用简单的Web浏览器与模拟器进行交互。如果想在笔记本电脑上工作，这是完美的选择，因为可以租用AWS实例来快速测试和设计机器人</td></tr><tr class="even"><td>Gazebo物理引擎：支持ODE、Bullet、Simbody和DART，其默认引擎为ODE</td></tr><tr class="odd"><td>Gazebo支持的平台：完美支持Linux、MacOS，Windows需使用源码自行构建</td></tr><tr class="even"><td>Gazebo编程接口：最最常用的是通过gazebo_ros_control与ROS建立通信，通信过程已经被封装好了，我们只需要配置文件就可以实现，而当单独使用时可使用==C++==编写控制器插件来完成机器人的动作控制；Gazebo的数据输出是通过topic来实现的，与MATLAB联合仿真时可利用ROSToolbox来实现，其本质还是通过ROS框架作为中介来完成的；与ROS联合仿真时，Gazebo当然是最佳选择，与ROS嵌合如此之深，大概就是新手的误区来源吧~</td></tr><tr class="odd"><td>blog.csdn.net/ZhangRelay/article/details/100547011</td></tr><tr class="even"><td>## 2、Webots Webots是瑞士公司Cyberbotics发布的一种用户友好型机器人模拟仿真器。它可以在Windows，Linux或macOS上运行，并且支持大多数编程语言，例如C/C++，Java，URBI，MATLAB和Python。还可以使用API或任何标准TCP/IP网络从外部控制Webots模拟器。Webots模拟器使用ODE（开放动力引擎）在逼真的3D环境中模拟物理。它还支持对碰撞和接触点进行精确建模，这可以使用虚拟机器人测试各种场景。Webots甚至附带一个机器人模型库，可使用PR2，Atlas，Aibo甚至是某些NASA机器人。Webots还支持VRML97，因此可以使用大多数建模软件（Solidworks，AutoCAD，Blender和Inventor）导入机器人设计。还可以导入地图和地形数据以在测试环境中创建准确的世界表示。</td></tr><tr class="odd"><td>Webots物理引擎：基于改进的ODE</td></tr><tr class="even"><td>Webots支持的平台：Windows、MacOS、Linux全平台支持</td></tr><tr class="odd"><td>Webots编程接口：支持C/C++、Java、Python、MATLAB、ROS以及TCP/IP完成控制器编程，不同的编程语言需要查阅不同的API，函数命名接近但风格不同，ROS通信是通过调用ROSAPI，然后将所使用的语言对应的控制器代码封装成ROStopic的形式来完成，自定义ROS控制器时建议使用Python，使用C/C++需要自行构建MakeFile文件，这对于新手而言绝对是个糟糕的选择；R2020版本已经大大简化了ROS的使用过程，当然也可借MATLAB为中介，通过ROSToolbox来实现，这就显得过于繁琐了。如果与Simulink联合仿真，以笔者个人的使用经验来看，建议通过ToWorkspace 和 From Workspace模块来实现，既简单又实用</td></tr><tr class="even"><td>（Webots由于刚开源不久，本身处于版本快速迭代期，时常有些小BUG，所以目前来看稳定性是三者中最差的一款仿真器，移动机器人的地表最强仿真软件）</td></tr><tr class="odd"><td>blog.csdn.net/ZhangRelay/article/details/100519183</td></tr><tr class="even"><td>## 3、V-REP（CoppeliaSim）V-REP（现在更新命名为CoppeliaSim）是免费的，用于教育目的，如果计划将其用于商业项目，则可以升级到专业版。可以在Windows，Linux或macOS上运行V-REP，并且可以使用六种不同的编程语言对其进行编程。它还具有ROS＆BlueZero支持，因此可以只使用3D模拟器并使代码在另一个平台上运行。V-REP支持四种不同的物理引擎（Bullet,ODE, Newton, and VortexDynamics）。它可以准确地处理对象的交互，例如碰撞，接触点和抓取。V-REP还支持粒子物理学来模拟空气和水，因此可以准确地对喷气发动机和螺旋桨建模。V-REP还可以模拟各种传感器，甚至可以通过插件将新传感器添加到模拟器。V-REP甚至支持路径和运动规划，甚至可以计算正向和逆向运动学。它还支持网格编辑，因此可以在模拟器中对设计进行小的调整，或者可以轻松导入任何五种不同3D模型格式（Obj，STL，URDF等）的模型</td></tr><tr class="odd"><td>V-REP物理引擎：支持Bullet2.78、Bullet2.83、ODE、Vortex和Newton，默认引擎为Bullet 2.78</td></tr><tr class="even"><td>V-REP支持的平台：Windows、MacOS、Linux全平台支持</td></tr><tr class="odd"><td>V-REP编程接口：支持C/C++、Python、Java、Matlab、Octave及ROS，默认使用Lua脚本语言，最大的特点在于，不管使用哪种编程语言，其函数名称几乎一模一样，这大大降低了用户的上手难度，也便于控制器的各种编程语言的转换。它的实现思路是通过Socket来完成的，其中V-REP作为服务器，控制器程序相当于客户端，且访问模式有阻塞式、非阻塞式等四种操作模式，使用时还需仔细弄明白。当然，也可以通过共享内存的方法实现与Simulink的联合仿真</td></tr><tr class="even"><td>blog.csdn.net/ZhangRelay/article/details/103353528</td></tr><tr class="odd"><td>## 4、NVIDIA ISAAC Platform for Robotics 在NVIDIAISAAC平台是由领先的显卡厂商这也是迅速成为AI行业的大玩家之一的NVIDIA开发。它可以在启用GPU的桌面上运行，也可以在AWS，GoogleCloud或Azure上的云中运行。它还支持NVIDIA Jetson AGX Xavier，JetsonTX2和JetsonNano。由于ISAAC机器人技术平台是由NVIDIA制造的，因此它提供了所有机器人模拟仿真器中最好的图形。它还对更复杂的任务（例如机器学习和数据处理）具有更好的GPU支持。NVIDIAISAAC机器人平台也支持称为GEM的软件模块。这些模块可使开发者快速向机器人添加功能，例如关键字检测，LIDAR，立体视觉和预先训练的神经网络视觉识别系统。ISAAC模拟器还运行在虚幻引擎4的增强版上，虚幻引擎4是一个开放源代码游戏引擎，可为PC和控制台上的某些顶级视频游戏提供支持。NVIDIAISAAC机器人技术平台和虚幻引擎都是开源平台，因此，如果是经验丰富的C++程序员，则可以使用自己的自定义代码来增强其功能。</td></tr><tr class="even"><td>## 5、Robot Virtual Worlds Robot VirtualWorlds是功能齐全的模拟器，可让用户对虚拟LEGOMindstorms机器人进行编程。它具有免费试用版，或者，如果想使用所有高级选项，则可以升级并支付完整的许可证费用。该模拟器的主要目的是用作教育平台，向年轻人介绍机器人技术的基础知识。它具有内置的3D仿真器，可以在其中构建和测试LEGO机器人，然后在类似游戏的环境中竞争挑战。RobotVirtual Worlds还支持使用NXT-G或LabVIEW对LEGOMindstorms机器人进行编程。还可以使用内置扩展系统在模拟器中创建自定义机器人模型或级别。该模拟器对于教师也非常有用，因为“机器人虚拟世界”提供了适合所有年龄和技能水平的学生的课程。教师还可以设置各种机器人竞赛，以在完全虚拟的环境中挑战和评估学生。</td></tr><tr class="odd"><td>## 6、Simscape Multibody Simscape 是 Simulink 的一个模块，而Simscape Multibody 又是 Simscape 的一个模块</td></tr><tr class="even"><td>Simscape Multibody: （前身为 SimMechanics）提供了适用于 3D机械系统（例如机器人、汽车悬架、建筑设备和飞机起落架）的多体仿真环境。您可以使用表示刚体、关节、约束、力元件和传感器的模块对多体系统进行建模。SimscapeMultibody 会建立整个机械系统的运动方程并进行求解。您可将完整的 CAD装配件（包括质量、惯性、关节、约束和 3D几何结构）导入到模型。您可在自动生成的 3D 动画中查看系统动态。SimscapeMultibody 可帮助您开发控制系统并测试系统级性能</td></tr><tr class="odd"><td>## 付费仿真软件： FANUC ROBOGUIDE ABB RobotStudio RoboDK 物理引擎：物理引擎大致可分为两种：一种是以游戏为中心的物理引擎，侧重于实时近似，占用计算资源少，；另一种是用于科学仿真的物理引擎，侧重于精确计算，仿真结果精度高，当然也需要更多的计算资源，比如ADAMS、ANSYS等。</td></tr><tr class="even"><td>ODE：开源物理引擎，全称Open DynamicsEngine，它是一款模拟刚体动力学的基于C/C++高性能库，功能稳定，常被用于计算机游戏和虚拟现实等技术上；</td></tr><tr class="odd"><td>Bullet：开源物理引擎，世界三大物理模拟引擎之一，由C++编写，与ODE相同，被广泛应用与游戏开发、电影制作中；</td></tr><tr class="even"><td>Simbody：开源物理引擎，由C++编写，为多体动力学模拟的高性能库；</td></tr><tr class="odd"><td>DART：开源物理引擎，全称Dynamic Animation and RoboticsToolkit，以准确性和稳定性著称；</td></tr><tr class="even"><td>Newton：开源物理引擎，精确的3D物理库，用于物理环境的实时仿真；</td></tr><tr class="odd"><td>Vortex：商业物理引擎，由CM-Labs开发，计算精度上可以说是上面介绍这几个物理引擎中的佼佼者，由于这是一款商业物理引擎，因此教育版的V-REP只能用来仿真20秒的过程，对于一些力控算法的验证倒也够用。</td></tr><tr class="even"><td>关于不同类型机器人的仿真<strong>移动机器人仿真：</strong><font color=red>Webots是最强移动机器人仿真软件；</font></td></tr><tr class="odd"><td><strong>机械臂仿真：</strong>Gazebo是神器，上手难度大；Webots可实现一些简单的抓取，如果需要精度高点的动力学仿真，笔者建议食用V-REP；此外还有一些其他的仿真软件，诸如SimscapeMultibody、Adams等软件，前者可以快速搭建Simulink仿真模型，后者一般机械臂的设计厂商使用较多；</td></tr><tr class="even"><td><strong>结合机器学习的仿真：</strong>理论上来讲，任何一款仿真软件都能实现，只不过需要自己整合控制器和机器学习相关API罢了；目前最常用的有PyBullet、MuJoCo等，前者开源，后者商用；</td></tr><tr class="odd"><td><strong>水下机器人：</strong><font color=red>Webots只需要添加一个Fluid节点即可实现流体环境的添加；</font></td></tr><tr class="even"><td># <ahref="http://www.running-robot.net/notice/196.html">Webots专题系列1-软件介绍、安装与演示-v1.1</a></td></tr><tr class="odd"><td><a href="http://www.cyberbotics.com/">Cyberbotics</a></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;table style=&quot;width:15%;&quot;&gt;
&lt;colgroup&gt;
&lt;col style=&quot;width: 15%&quot; /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td&gt;2022-11-22 19:48:21 Written </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Mathematica</title>
    <link href="https://oceanyouth.github.io/2022/11/15/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2022-11-15-Mathematica/"/>
    <id>https://oceanyouth.github.io/2022/11/15/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2022-11-15-Mathematica/</id>
    <published>2022-11-15T04:58:22.000Z</published>
    <updated>2022-11-15T05:48:34.083Z</updated>
    
    <content type="html"><![CDATA[<p><ahref="https://www.bilibili.com/video/BV1av411N7Xi/?spm_id_from=333.788.recommend_more_video.0&amp;vd_source=ed137998fd1ae1b4a12558edaa6b34ab">北京某高校《Mathematica及其应用》(共八讲) (已完结)</a></p><p><ahref="https://www.bilibili.com/read/cv15439522?spm_id_from=333.999.0.0">Mathematica各个版本【安装包】</a></p><p>数值计算型： matlab主要用于数值计算，矩阵计算。</p><p>数学分析型： mathematica定位是符号计算maple也适用于符号计算，但版本不兼容，类似C语言。</p><p><ahref="https://www.guyuehome.com/33829">基于Mathematica的机器人仿真环境（机械臂篇）</a></p><p><ahref="https://www.bilibili.com/video/av295949831/?vd_source=ed137998fd1ae1b4a12558edaa6b34ab">用latex(lyx)和mathematica互动式进行公式推导</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a
href=&quot;https://www.bilibili.com/video/BV1av411N7Xi/?spm_id_from=333.788.recommend_more_video.0&amp;amp;vd_source=ed137998fd1ae1b4a12558eda</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>欧拉角</title>
    <link href="https://oceanyouth.github.io/2022/11/14/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2022-11-14-%E6%AC%A7%E6%8B%89%E8%A7%92/"/>
    <id>https://oceanyouth.github.io/2022/11/14/%E4%B8%B4%E6%97%B6%E5%88%86%E5%8C%BA-2022-11-14-%E6%AC%A7%E6%8B%89%E8%A7%92/</id>
    <published>2022-11-14T03:04:22.000Z</published>
    <updated>2022-11-15T01:53:44.329Z</updated>
    
    <content type="html"><![CDATA[<p><ahref="https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E8%A7%92/1626212?fr=aladdin">欧拉角</a>用来确定定点转动刚体位置的3个一组独立角参量，由章动角θ、旋进角（即进动角）ψ和自转角φ组成，为欧拉首先提出而得名。</p><p>静态欧拉角和动态欧拉角</p><p><ahref="https://zhuanlan.zhihu.com/p/413224014">图形学中常见的数学困惑</a></p><p><ahref="https://www.guyuehome.com/39658">智能体位姿解算核心——欧拉角与四元数（一）</a></p><p><ahref="https://blog.csdn.net/hangl_ciom/article/details/98170231">欧拉角的理解</a></p><p><a href="https://en.wikipedia.org/wiki/Euler_angles">Eulerangles</a></p><p>The three elemental rotations may be extrinsic (rotations about theaxes xyz of the original coordinate system, which is assumed to remainmotionless), or intrinsic (rotations about the axes of the rotatingcoordinate system XYZ, solidary with the moving body, which changes itsorientation with respect to the extrinsic frame after each elementalrotation).</p><p><font color=blue>Conventions by intrinsic rotations</font><font color=blue>Conventions by extrinsic rotations</font></p><p><ahref="https://dreamanddead.github.io/post/understanding-euler-angles/">UnderstandingEuler Angles</a></p><p><ahref="https://math.stackexchange.com/questions/1137745/proof-of-the-extrinsic-to-intrinsic-rotation-transform/1155951#1155951">Proofof the extrinsic to intrinsic rotation transform</a></p><p><ahref="https://www.wikiwand.com/en/Davenport_chained_rotations#/Conversion_between_intrinsic_and_extrinsic_rotations">Davenportchained rotations</a></p><p><ahref="https://blog.csdn.net/linuxheik/article/details/78842428">欧拉角图解释</a></p><p><ahref="https://dominicplein.medium.com/extrinsic-intrinsic-rotation-do-i-multiply-from-right-or-left-357c38c1abfd">Extrinsic&amp; intrinsic rotation: Do I multiply from right or left?</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a
href=&quot;https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E8%A7%92/1626212?fr=aladdin&quot;&gt;欧拉角&lt;/a&gt;用来确定定点转动刚体位置的3个一组独立角参量，由章动角θ、旋进角（即进动角）ψ和自转角</summary>
      
    
    
    
    
  </entry>
  
</feed>
